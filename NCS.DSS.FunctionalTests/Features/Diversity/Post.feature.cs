// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Diversity
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Post")]
    public partial class PostFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Post.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Post", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
 #line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table1.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 4
 testRunner.Given("I post a Customer with the following details:", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Valid DiversityDetails with all Fields")]
        public virtual void PostValidDiversityDetailsWithAllFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Valid DiversityDetails with all Fields", null, ((string[])(null)));
#line 10
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table2.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table2.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table2.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "7"});
            table2.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table2.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table2.AddRow(new string[] {
                        "Ethnicity",
                        "44"});
            table2.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table2.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 11
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table2, "When ");
#line 22
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table3.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table3.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table3.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "7"});
            table3.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table3.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table3.AddRow(new string[] {
                        "Ethnicity",
                        "44"});
            table3.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table3.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 23
  testRunner.And("the response body should contain:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with only mandatory Fields")]
        public virtual void PostDiversityDetailsWithOnlyMandatoryFields()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with only mandatory Fields", null, ((string[])(null)));
#line 35
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table4.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table4.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table4.AddRow(new string[] {
                        "Ethnicity",
                        "44"});
#line 36
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table4, "When ");
#line 42
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table5.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table5.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table5.AddRow(new string[] {
                        "Ethnicity",
                        "44"});
#line 43
  testRunner.And("the response body should contain:", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with missing ConsentToCollectLLDDHealth Value")]
        public virtual void PostDiversityDetailsWithMissingConsentToCollectLLDDHealthValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with missing ConsentToCollectLLDDHealth Value", null, ((string[])(null)));
#line 51
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "true"});
            table6.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "9"});
            table6.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "7"});
            table6.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table6.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table6.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table6.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table6.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 52
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table6, "When ");
#line 62
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid ConsentToCollectLLDDHealth Value")]
        public virtual void PostDiversityDetailsWithInvalidConsentToCollectLLDDHealthValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid ConsentToCollectLLDDHealth Value", null, ((string[])(null)));
#line 65
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "tru"});
            table7.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table7.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "9"});
            table7.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "7"});
            table7.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table7.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table7.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table7.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table7.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 66
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table7, "When ");
#line 77
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with missing LearningDifficultyOrDisabilityDeclaration Valu" +
            "e")]
        public virtual void PostDiversityDetailsWithMissingLearningDifficultyOrDisabilityDeclarationValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with missing LearningDifficultyOrDisabilityDeclaration Valu" +
                    "e", null, ((string[])(null)));
#line 80
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table8.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "9"});
            table8.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "7"});
            table8.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table8.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table8.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table8.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table8.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 81
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table8, "When ");
#line 91
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid LearningDifficultyOrDisabilityDeclaration Valu" +
            "e")]
        public virtual void PostDiversityDetailsWithInvalidLearningDifficultyOrDisabilityDeclarationValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid LearningDifficultyOrDisabilityDeclaration Valu" +
                    "e", null, ((string[])(null)));
#line 94
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table9.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "4"});
            table9.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "2"});
            table9.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "3"});
            table9.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table9.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table9.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table9.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table9.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 95
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table9, "When ");
#line 106
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid PrimaryLearningDifficultyOrDisability Value")]
        public virtual void PostDiversityDetailsWithInvalidPrimaryLearningDifficultyOrDisabilityValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid PrimaryLearningDifficultyOrDisability Value", null, ((string[])(null)));
#line 109
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table10.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table10.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "21"});
            table10.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "3"});
            table10.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table10.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table10.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table10.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table10.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 110
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table10, "When ");
#line 121
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid SecondaryLearningDifficultyOrDisability Value")]
        public virtual void PostDiversityDetailsWithInvalidSecondaryLearningDifficultyOrDisabilityValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid SecondaryLearningDifficultyOrDisability Value", null, ((string[])(null)));
#line 124
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table11.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table11.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "9"});
            table11.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "21"});
            table11.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table11.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table11.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table11.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table11.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 125
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table11, "When ");
#line 136
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid DateAndTimeLLDDHealthConsentCollected Value")]
        public virtual void PostDiversityDetailsWithInvalidDateAndTimeLLDDHealthConsentCollectedValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid DateAndTimeLLDDHealthConsentCollected Value", null, ((string[])(null)));
#line 139
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table12.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table12.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "9"});
            table12.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "7"});
            table12.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2033-09-19T09:01:00Z"});
            table12.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table12.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table12.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table12.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 140
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table12, "When ");
#line 151
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with missing ConsentToCollectEthnicity Value")]
        public virtual void PostDiversityDetailsWithMissingConsentToCollectEthnicityValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with missing ConsentToCollectEthnicity Value", null, ((string[])(null)));
#line 153
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table13.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "true"});
            table13.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "2"});
            table13.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "3"});
            table13.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table13.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table13.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table13.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 154
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table13, "When ");
#line 164
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid ConsentToCollectEthnicity Value")]
        public virtual void PostDiversityDetailsWithInvalidConsentToCollectEthnicityValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid ConsentToCollectEthnicity Value", null, ((string[])(null)));
#line 167
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table14.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "true"});
            table14.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "2"});
            table14.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "3"});
            table14.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table14.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "tru"});
            table14.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table14.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table14.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 168
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table14, "When ");
#line 179
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid Ethnicity Value")]
        public virtual void PostDiversityDetailsWithInvalidEthnicityValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid Ethnicity Value", null, ((string[])(null)));
#line 181
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table15.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "true"});
            table15.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "2"});
            table15.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "3"});
            table15.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table15.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table15.AddRow(new string[] {
                        "Ethnicity",
                        "12"});
            table15.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-09-19T09:01:00Z"});
            table15.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 182
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table15, "When ");
#line 193
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post DiversityDetails with invalid DateAndTimeEthnicityCollected Value")]
        public virtual void PostDiversityDetailsWithInvalidDateAndTimeEthnicityCollectedValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post DiversityDetails with invalid DateAndTimeEthnicityCollected Value", null, ((string[])(null)));
#line 196
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 3
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table16.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "true"});
            table16.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "2"});
            table16.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "3"});
            table16.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-09-19T09:01:00Z"});
            table16.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table16.AddRow(new string[] {
                        "Ethnicity",
                        "31"});
            table16.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2033-09-19T09:01:00Z"});
            table16.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-09-19T09:01:00Z"});
#line 197
  testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table16, "When ");
#line 208
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
