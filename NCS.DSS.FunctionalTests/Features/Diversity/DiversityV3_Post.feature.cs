// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Diversity
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DiversityV3_Post")]
    [NUnit.Framework.CategoryAttribute("postV3")]
    public partial class DiversityV3_PostFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DiversityV3_Post.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DiversityV3_Post", null, ProgrammingLanguage.CSharp, new string[] {
                        "postV3"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table1.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 7
 testRunner.Given("I post an adviser with the following details:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table2.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 11
 testRunner.And("I post a Customer with the following details:", ((string)(null)), table2, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with all values")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        public virtual void PostDiversityWithAllValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with all values", null, new string[] {
                        "diversitydetails",
                        "smoke"});
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table3.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table3.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "4"});
            table3.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table3.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table3.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table3.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table3.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table3.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 19
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table3, "When ");
#line 30
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table4.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table4.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "4"});
            table4.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table4.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table4.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table4.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table4.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table4.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 31
 testRunner.And("the response body should contain:", ((string)(null)), table4, "And ");
#line 42
 testRunner.And("the \"diversitydetails\" cosmos document should include CreatedBy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("there should be a record in the diversitydetails ChangeFeed table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("there should be a record in the diversitydetails-history ChangeFeed table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with all mandatory values")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithAllMandatoryValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with all mandatory values", null, new string[] {
                        "diversitydetails"});
#line 48
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table5.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table5.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table5.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 49
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table5, "When ");
#line 55
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table6.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table6.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table6.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 56
 testRunner.And("the response body should contain:", ((string)(null)), table6, "And ");
#line 63
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for ConsentToCollectLLDDHealth")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("ConsentToCollectLLDDHealth", "True", null)]
        [NUnit.Framework.TestCaseAttribute("ConsentToCollectLLDDHealth", "False", null)]
        public virtual void PostDiversityWithValidValuesForConsentToCollectLLDDHealth(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for ConsentToCollectLLDDHealth", null, @__tags);
#line 72
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 74
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table7.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table7.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 75
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table7, "When ");
#line 80
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table8.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table8.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 81
 testRunner.And("the response body should contain:", ((string)(null)), table8, "And ");
#line 86
 testRunner.And(string.Format("the response body should have {0} with value {1}", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for ConsentToCollectLLDDHealth")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForConsentToCollectLLDDHealth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for ConsentToCollectLLDDHealth", null, new string[] {
                        "diversitydetails"});
#line 110
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table9.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table9.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
            table9.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        ""});
#line 113
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table9, "When ");
#line 119
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 120
 testRunner.And("the error message should be \"The ConsentToCollectLLDDHealth field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for LearningDifficultyOrDisabilityDeclaration")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "1", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "2", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "9", null)]
        public virtual void PostDiversityWithValidValuesForLearningDifficultyOrDisabilityDeclaration(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for LearningDifficultyOrDisabilityDeclaration", null, @__tags);
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 127
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table10.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table10.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 128
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table10, "When ");
#line 133
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table11.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table11.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 134
 testRunner.And("the response body should contain:", ((string)(null)), table11, "And ");
#line 139
 testRunner.And(string.Format("the response body should have {0} with value {1}", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with invalid values for LearningDifficultyOrDisabilityDeclaration")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "-1", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "0", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "3", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "8", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "10", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "98", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "99", null)]
        [NUnit.Framework.TestCaseAttribute("LearningDifficultyOrDisabilityDeclaration", "100", null)]
        public virtual void PostDiversityWithInvalidValuesForLearningDifficultyOrDisabilityDeclaration(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with invalid values for LearningDifficultyOrDisabilityDeclaration", null, @__tags);
#line 150
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 151
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table12.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table12.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 152
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table12, "When ");
#line 157
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 158
 testRunner.And("the error message should be \"Please supply a valid Learning Difficulty Or Disabil" +
                    "ity Declaration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for LearningDifficultyOrDisabilityDeclarati" +
            "on")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForLearningDifficultyOrDisabilityDeclaration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for LearningDifficultyOrDisabilityDeclarati" +
                    "on", null, new string[] {
                        "diversitydetails"});
#line 172
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table13.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table13.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "4"});
            table13.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table13.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table13.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table13.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table13.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table13.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 174
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table13, "When ");
#line 185
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "9"});
#line 186
 testRunner.And("the response body should contain:", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for PrimaryLearningDifficultyOrDisability")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "4", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "5", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "6", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "7", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "8", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "9", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "10", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "11", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "12", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "13", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "14", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "15", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "16", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "17", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "93", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "94", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "95", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "96", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "97", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "98", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "99", null)]
        public virtual void PostDiversityWithValidValuesForPrimaryLearningDifficultyOrDisability(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for PrimaryLearningDifficultyOrDisability", null, @__tags);
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 196
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table15.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table15.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
            table15.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
#line 197
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table15, "When ");
#line 203
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table16.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table16.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
            table16.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
#line 204
 testRunner.And("the response body should contain:", ((string)(null)), table16, "And ");
#line 210
 testRunner.And(string.Format("the response body should have {0} with value {1}", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with invalid values for PrimaryLearningDifficultyOrDisability")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "-1", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "1", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "2", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "3", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "18", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "20", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "20", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "90", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "92", null)]
        [NUnit.Framework.TestCaseAttribute("PrimaryLearningDifficultyOrDisability", "100", null)]
        public virtual void PostDiversityWithInvalidValuesForPrimaryLearningDifficultyOrDisability(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with invalid values for PrimaryLearningDifficultyOrDisability", null, @__tags);
#line 239
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 240
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table17.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table17.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 241
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table17, "When ");
#line 246
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 247
 testRunner.And("the error message should be \"Please supply a valid Primary Learning Difficulty Or" +
                    " Disability\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for PrimaryLearningDifficultyOrDisability")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForPrimaryLearningDifficultyOrDisability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for PrimaryLearningDifficultyOrDisability", null, new string[] {
                        "diversitydetails"});
#line 264
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table18.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table18.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        ""});
            table18.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table18.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table18.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table18.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table18.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table18.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 266
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table18, "When ");
#line 277
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table19.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "9"});
            table19.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "99"});
            table19.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table19.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table19.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table19.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table19.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table19.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 278
 testRunner.And("the response body should contain:", ((string)(null)), table19, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for SecondaryLearningDifficultyOrDisability")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "4", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "5", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "6", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "7", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "8", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "9", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "10", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "11", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "12", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "13", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "14", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "15", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "16", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "17", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "93", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "94", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "95", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "96", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "97", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "98", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "99", null)]
        public virtual void PostDiversityWithValidValuesForSecondaryLearningDifficultyOrDisability(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for SecondaryLearningDifficultyOrDisability", null, @__tags);
#line 295
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 296
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table20.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table20.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 297
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table20, "When ");
#line 302
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table21.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table21.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 303
 testRunner.And("the response body should contain:", ((string)(null)), table21, "And ");
#line 308
 testRunner.And(string.Format("the response body should have {0} with value {1}", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with invalid values for SecondaryLearningDifficultyOrDisability")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "-1", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "1", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "2", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "3", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "18", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "20", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "20", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "90", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "92", null)]
        [NUnit.Framework.TestCaseAttribute("SecondaryLearningDifficultyOrDisability", "100", null)]
        public virtual void PostDiversityWithInvalidValuesForSecondaryLearningDifficultyOrDisability(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with invalid values for SecondaryLearningDifficultyOrDisability", null, @__tags);
#line 337
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 338
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table22.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table22.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 339
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table22, "When ");
#line 344
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 345
 testRunner.And("the error message should be \"Please supply a valid Secondary Learning Difficulty " +
                    "Or Disability\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for SecondaryLearningDifficultyOrDisability" +
            "")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForSecondaryLearningDifficultyOrDisability()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for SecondaryLearningDifficultyOrDisability" +
                    "", null, new string[] {
                        "diversitydetails"});
#line 362
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table23.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table23.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table23.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table23.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table23.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table23.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table23.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table23.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 364
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table23, "When ");
#line 375
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table24.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "9"});
            table24.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table24.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "99"});
            table24.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table24.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table24.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table24.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
            table24.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-25T11:21:00Z"});
#line 376
 testRunner.And("the response body should contain:", ((string)(null)), table24, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for DateAndTimeLLDDHealthConsentCollected")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeLLDDHealthConsentCollected", "now", null)]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeLLDDHealthConsentCollected", "today", null)]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeLLDDHealthConsentCollected", "2018-08-25T11:21:00Z", null)]
        public virtual void PostDiversityWithValidValuesForDateAndTimeLLDDHealthConsentCollected(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for DateAndTimeLLDDHealthConsentCollected", null, @__tags);
#line 392
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 393
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table25.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table25.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 394
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table25, "When ");
#line 399
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table26.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table26.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 400
 testRunner.And("the response body should contain:", ((string)(null)), table26, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with invalid values for DateAndTimeLLDDHealthConsentCollected")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeLLDDHealthConsentCollected", "now +1Hour", null)]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeLLDDHealthConsentCollected", "today +1Day", null)]
        public virtual void PostDiversityWithInvalidValuesForDateAndTimeLLDDHealthConsentCollected(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with invalid values for DateAndTimeLLDDHealthConsentCollected", null, @__tags);
#line 417
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 418
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table27.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table27.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 419
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table27, "When ");
#line 424
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 425
 testRunner.And("the error message should be \"Date And Time LLDD Health Consent Collected must be " +
                    "less the current date/time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for DateAndTimeLLDDHealthConsentCollected w" +
            "ith no consent to collect  LDD Health data given")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForDateAndTimeLLDDHealthConsentCollectedWithNoConsentToCollectLDDHealthDataGiven()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for DateAndTimeLLDDHealthConsentCollected w" +
                    "ith no consent to collect  LDD Health data given", null, new string[] {
                        "diversitydetails"});
#line 437
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table28.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table28.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table28.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table28.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table28.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table28.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table28.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 439
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table28, "When ");
#line 449
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table29.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "9"});
            table29.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table29.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "99"});
            table29.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table29.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table29.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table29.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 450
 testRunner.And("the response body should contain:", ((string)(null)), table29, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for DateAndTimeLLDDHealthConsentCollected w" +
            "ith consent to collect LDD Health data given")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForDateAndTimeLLDDHealthConsentCollectedWithConsentToCollectLDDHealthDataGiven()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for DateAndTimeLLDDHealthConsentCollected w" +
                    "ith consent to collect LDD Health data given", null, new string[] {
                        "diversitydetails"});
#line 462
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table30.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table30.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table30.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table30.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table30.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table30.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table30.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 464
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table30, "When ");
#line 474
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table31.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "9"});
            table31.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table31.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "99"});
            table31.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table31.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table31.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 475
 testRunner.And("the response body should contain:", ((string)(null)), table31, "And ");
#line 484
 testRunner.And("the date field DateAndTimeLLDDHealthConsentCollected should hold a recent value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for ConsentToCollectEthnicity")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("ConsentToCollectEthnicity", "True", null)]
        [NUnit.Framework.TestCaseAttribute("ConsentToCollectEthnicity", "False", null)]
        public virtual void PostDiversityWithValidValuesForConsentToCollectEthnicity(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for ConsentToCollectEthnicity", null, @__tags);
#line 492
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 493
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table32.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "9"});
            table32.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 494
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table32, "When ");
#line 499
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 500
 testRunner.And("the response body should contain:", ((string)(null)), table33, "And ");
#line 503
 testRunner.And(string.Format("the response body should have {0} with value {1}", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for ConsentToCollectEthnicity")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForConsentToCollectEthnicity()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for ConsentToCollectEthnicity", null, new string[] {
                        "diversitydetails"});
#line 531
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table34.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table34.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table34.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table34.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table34.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        ""});
            table34.AddRow(new string[] {
                        "Ethnicity",
                        "32"});
            table34.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 533
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table34, "When ");
#line 543
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 544
 testRunner.And("the error message should be \"The ConsentToCollectEthnicity field is required.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for Ethnicity")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "31", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "32", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "33", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "34", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "35", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "36", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "37", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "38", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "39", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "40", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "41", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "42", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "43", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "44", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "45", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "46", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "47", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "98", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "99", null)]
        public virtual void PostDiversityWithValidValuesForEthnicity(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for Ethnicity", null, @__tags);
#line 553
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 554
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table35.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table35.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
#line 555
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table35, "When ");
#line 560
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table36.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
#line 561
 testRunner.And("the response body should contain:", ((string)(null)), table36, "And ");
#line 565
 testRunner.And(string.Format("the response body should have {0} with value {1}", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with invalid values for Ethnicity")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "0", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "30", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "48", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "50", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "90", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "97", null)]
        [NUnit.Framework.TestCaseAttribute("Ethnicity", "100", null)]
        public virtual void PostDiversityWithInvalidValuesForEthnicity(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with invalid values for Ethnicity", null, @__tags);
#line 590
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 591
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table37.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
#line 592
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table37, "When ");
#line 596
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 597
 testRunner.And("the error message should be \"Please supply a valid Ethnicity\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for Ethnicity")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForEthnicity()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for Ethnicity", null, new string[] {
                        "diversitydetails"});
#line 610
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table38.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table38.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table38.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table38.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table38.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table38.AddRow(new string[] {
                        "Ethnicity",
                        ""});
#line 612
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table38, "When ");
#line 621
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 622
  testRunner.And("the response body should contain:", ((string)(null)), table39, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with valid values for DateAndTimeEthnicityCollected")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeEthnicityCollected", "now", null)]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeEthnicityCollected", "today", null)]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeEthnicityCollected", "2018-08-25T11:21:00Z", null)]
        public virtual void PostDiversityWithValidValuesForDateAndTimeEthnicityCollected(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with valid values for DateAndTimeEthnicityCollected", null, @__tags);
#line 632
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 633
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table40.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table40.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table40.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 634
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table40, "When ");
#line 640
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table41.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table41.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 641
 testRunner.And("the response body should contain:", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with invalid values for DateAndTimeEthnicityCollected")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeEthnicityCollected", "now +1Hour", null)]
        [NUnit.Framework.TestCaseAttribute("DateAndTimeEthnicityCollected", "today +1Day", null)]
        public virtual void PostDiversityWithInvalidValuesForDateAndTimeEthnicityCollected(string field, string value, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "diversitydetails"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with invalid values for DateAndTimeEthnicityCollected", null, @__tags);
#line 658
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line 659
 testRunner.Given(string.Format("I want to send {0} with value {1} in the following request", field, value), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table42.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table42.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table42.AddRow(new string[] {
                        "Ethnicity",
                        "99"});
#line 660
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table42, "When ");
#line 666
 testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 667
 testRunner.And("the error message should be \"Date And Time Ethnicity Collected must be less the c" +
                    "urrent date/time\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for DateAndTimeEthnicityCollected and no co" +
            "nsent to collect  Ethnicity data given")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForDateAndTimeEthnicityCollectedAndNoConsentToCollectEthnicityDataGiven()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for DateAndTimeEthnicityCollected and no co" +
                    "nsent to collect  Ethnicity data given", null, new string[] {
                        "diversitydetails"});
#line 675
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table43.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table43.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table43.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table43.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table43.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table43.AddRow(new string[] {
                        "Ethnicity",
                        "38"});
            table43.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        ""});
#line 677
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table43, "When ");
#line 687
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table44.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table44.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table44.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "99"});
            table44.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table44.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "false"});
            table44.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        ""});
#line 688
 testRunner.And("the response body should contain:", ((string)(null)), table44, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Diversity with no value supplied for DateAndTimeEthnicityCollected with cons" +
            "ent to collect Ethnicity data given")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostDiversityWithNoValueSuppliedForDateAndTimeEthnicityCollectedWithConsentToCollectEthnicityDataGiven()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Diversity with no value supplied for DateAndTimeEthnicityCollected with cons" +
                    "ent to collect Ethnicity data given", null, new string[] {
                        "diversitydetails"});
#line 699
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "false"});
            table45.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        ""});
            table45.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "5"});
            table45.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        ""});
            table45.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        ""});
            table45.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table45.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        ""});
#line 701
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table45, "When ");
#line 710
 testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 711
 testRunner.And("the date field DateAndTimeEthnicityCollected should hold a recent value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post a second Diversity record")]
        [NUnit.Framework.CategoryAttribute("diversitydetails")]
        public virtual void PostASecondDiversityRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post a second Diversity record", null, new string[] {
                        "diversitydetails"});
#line 729
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table46.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table46.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "4"});
            table46.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table46.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table46.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table46.AddRow(new string[] {
                        "EthnicityID",
                        "32"});
            table46.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 731
 testRunner.Given("I post a Diversity Details record with the following details:", ((string)(null)), table46, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "ConsentToCollectLLDDHealth",
                        "true"});
            table47.AddRow(new string[] {
                        "LearningDifficultyOrDisabilityDeclaration",
                        "1"});
            table47.AddRow(new string[] {
                        "PrimaryLearningDifficultyOrDisability",
                        "4"});
            table47.AddRow(new string[] {
                        "SecondaryLearningDifficultyOrDisability",
                        "5"});
            table47.AddRow(new string[] {
                        "DateAndTimeLLDDHealthConsentCollected",
                        "2018-06-25T11:21:00Z"});
            table47.AddRow(new string[] {
                        "ConsentToCollectEthnicity",
                        "true"});
            table47.AddRow(new string[] {
                        "EthnicityID",
                        "32"});
            table47.AddRow(new string[] {
                        "DateAndTimeEthnicityCollected",
                        "2018-06-25T11:22:00Z"});
#line 741
 testRunner.When("I post a DiversityDetail with the following details:", ((string)(null)), table47, "When ");
#line 751
 testRunner.Then("there should be a 409 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

