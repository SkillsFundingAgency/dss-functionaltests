// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.LearningProgression
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LearningProgression_Get")]
    public partial class LearningProgression_GetFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LearningProgression_Get.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LearningProgression_Get", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table1.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 5
 testRunner.Given("I post an adviser with the following details:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table2.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 9
 testRunner.And("I post a Customer with the following details:", ((string)(null)), table2, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Learning Progression by ID")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        public virtual void GetLearningProgressionByID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Learning Progression by ID", null, new string[] {
                        "LearningProgression",
                        "Smoke"});
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table3.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table3.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table3.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table3.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table3.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table3.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 18
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table3, "Given ");
#line 27
 testRunner.When("I get a Learning Progression by ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table4.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table4.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table4.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table4.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table4.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table4.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
            table4.AddRow(new string[] {
                        "SubcontractorId",
                        ""});
#line 29
  testRunner.And("the response body should contain:", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Learning Progression by ID with subcontractorId")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        [NUnit.Framework.CategoryAttribute("subcontractorId")]
        public virtual void GetLearningProgressionByIDWithSubcontractorId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Learning Progression by ID with subcontractorId", null, new string[] {
                        "LearningProgression",
                        "subcontractorId"});
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table5.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table5.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table5.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table5.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table5.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table5.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 45
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table5, "Given ");
#line 54
 testRunner.When("I get a Learning Progression by ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table6.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table6.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table6.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table6.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table6.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table6.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
            table6.AddRow(new string[] {
                        "SubcontractorId",
                        ""});
#line 56
  testRunner.And("the response body should contain:", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get All Learning Progression records where 1 exists")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        public virtual void GetAllLearningProgressionRecordsWhere1Exists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get All Learning Progression records where 1 exists", null, new string[] {
                        "LearningProgression"});
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table7.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table7.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table7.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table7.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table7.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table7.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 69
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table7, "Given ");
#line 78
 testRunner.When("I get all Learning Progression records for a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 80
 testRunner.And("the response should contain 1 document(s)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table8.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table8.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table8.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table8.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table8.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table8.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
            table8.AddRow(new string[] {
                        "SubcontractorId",
                        ""});
#line 81
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get All Learning Progression records where 2 exist")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        public virtual void GetAllLearningProgressionRecordsWhere2Exist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get All Learning Progression records where 2 exist", null, new string[] {
                        "LearningProgression"});
#line 93
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table9.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table9.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table9.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table9.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table9.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table9.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 94
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2019-06-25T11:21:00Z"});
            table10.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "2"});
            table10.AddRow(new string[] {
                        "LearningHours",
                        "2"});
            table10.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-07-25T11:21:00Z"});
            table10.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "3"});
            table10.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-26T11:21:00Z"});
            table10.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345679"});
#line 103
 testRunner.And("I post a Learning Progression record with the following details:", ((string)(null)), table10, "And ");
#line 112
 testRunner.When("I get all Learning Progression records for a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 114
 testRunner.And("the response should contain 2 document(s)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table11.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table11.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table11.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table11.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table11.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table11.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
            table11.AddRow(new string[] {
                        "SubcontractorId",
                        ""});
#line 115
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2019-06-25T11:21:00Z"});
            table12.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "2"});
            table12.AddRow(new string[] {
                        "LearningHours",
                        "2"});
            table12.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-07-25T11:21:00Z"});
            table12.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "3"});
            table12.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-26T11:21:00Z"});
            table12.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345679"});
#line 125
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get All Learning Progression records where many exist")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        public virtual void GetAllLearningProgressionRecordsWhereManyExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get All Learning Progression records where many exist", null, new string[] {
                        "LearningProgression"});
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table13.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table13.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table13.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table13.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table13.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table13.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 138
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-07-25T11:21:00Z"});
            table14.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "2"});
            table14.AddRow(new string[] {
                        "LearningHours",
                        "2"});
            table14.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-07-25T11:21:00Z"});
            table14.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "3"});
            table14.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-26T11:21:00Z"});
            table14.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345679"});
#line 147
 testRunner.And("I post a Learning Progression record with the following details:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-08-25T11:21:00Z"});
            table15.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table15.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table15.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table15.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "4"});
            table15.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table15.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 156
 testRunner.And("I post a Learning Progression record with the following details:", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-09-25T11:21:00Z"});
            table16.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "2"});
            table16.AddRow(new string[] {
                        "LearningHours",
                        "2"});
            table16.AddRow(new string[] {
                        "DateLearningStarted",
                        "2018-07-25T11:21:00Z"});
            table16.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "5"});
            table16.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-26T11:21:00Z"});
            table16.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345679"});
#line 165
 testRunner.And("I post a Learning Progression record with the following details:", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-10-25T11:21:00Z"});
            table17.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table17.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table17.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table17.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "6"});
            table17.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table17.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 174
 testRunner.And("I post a Learning Progression record with the following details:", ((string)(null)), table17, "And ");
#line 183
 testRunner.When("I get all Learning Progression records for a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 185
 testRunner.And("the response should contain 5 document(s)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table18.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table18.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table18.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table18.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table18.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table18.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 186
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-07-25T11:21:00Z"});
            table19.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "2"});
            table19.AddRow(new string[] {
                        "LearningHours",
                        "2"});
            table19.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-07-25T11:21:00Z"});
            table19.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "3"});
            table19.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-26T11:21:00Z"});
            table19.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345679"});
#line 195
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-08-25T11:21:00Z"});
            table20.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table20.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table20.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table20.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "4"});
            table20.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table20.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 204
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-09-25T11:21:00Z"});
            table21.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "2"});
            table21.AddRow(new string[] {
                        "LearningHours",
                        "2"});
            table21.AddRow(new string[] {
                        "DateLearningStarted",
                        "2018-07-25T11:21:00Z"});
            table21.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "5"});
            table21.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-26T11:21:00Z"});
            table21.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345679"});
#line 213
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-10-25T11:21:00Z"});
            table22.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table22.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table22.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table22.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "6"});
            table22.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table22.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 222
 testRunner.And("the response body should incorporate a document with the following details:", ((string)(null)), table22, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Learning Progression by invalid ID")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        public virtual void GetLearningProgressionByInvalidID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Learning Progression by invalid ID", null, new string[] {
                        "LearningProgression"});
#line 234
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table23.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table23.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table23.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table23.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table23.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table23.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 235
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table23, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table24.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 244
 testRunner.And("I post a Customer with the following details:", ((string)(null)), table24, "And ");
#line 248
 testRunner.When("I get a Learning Progression by ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
 testRunner.Then("there should be a 204 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get All Learning Progression records where none exist")]
        [NUnit.Framework.CategoryAttribute("LearningProgression")]
        public virtual void GetAllLearningProgressionRecordsWhereNoneExist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get All Learning Progression records where none exist", null, new string[] {
                        "LearningProgression"});
#line 252
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "DateProgressionRecorded",
                        "2018-06-25T11:21:00Z"});
            table25.AddRow(new string[] {
                        "CurrentLearningStatus",
                        "1"});
            table25.AddRow(new string[] {
                        "LearningHours",
                        "1"});
            table25.AddRow(new string[] {
                        "DateLearningStarted",
                        "2019-06-25T11:21:00Z"});
            table25.AddRow(new string[] {
                        "CurrentQualificationLevel",
                        "2"});
            table25.AddRow(new string[] {
                        "DateQualificationLevelAchieved",
                        "2019-07-25T11:21:00Z"});
            table25.AddRow(new string[] {
                        "LastLearningProvidersUKPRN",
                        "12345678"});
#line 254
 testRunner.Given("I post a Learning Progression record with the following details:", ((string)(null)), table25, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table26.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 263
 testRunner.And("I post a Customer with the following details:", ((string)(null)), table26, "And ");
#line 267
 testRunner.When("I get all Learning Progression records for a customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 268
 testRunner.Then("there should be a 204 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

