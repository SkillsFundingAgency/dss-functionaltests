// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Contact
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Post")]
    [NUnit.Framework.CategoryAttribute("postV1")]
    public partial class PostFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Post.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Post", null, ProgrammingLanguage.CSharp, new string[] {
                        "postV1"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
 #line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table1.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 6
 testRunner.Given("I post a Customer with the following details:", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post valid contact")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostValidContact()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post valid contact", null, new string[] {
                        "contactdetails"});
#line 13
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table2.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table2.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table2.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table2.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table2.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 14
 testRunner.Given("I post a Contact with the following details:", ((string)(null)), table2, "Given ");
#line 22
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table3.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table3.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table3.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table3.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table3.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 23
  testRunner.And("the response body should contain:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Valid ContactDetail one contact method")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostValidContactDetailOneContactMethod()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Valid ContactDetail one contact method", null, new string[] {
                        "contactdetails"});
#line 34
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "PreferredContactMethod",
                        "2"});
            table4.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table4.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 35
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table4, "Given ");
#line 40
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "PreferredContactMethod",
                        "2"});
            table5.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table5.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 41
  testRunner.And("the response body should contain:", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post Valid ContactDetail with ten digit phone numbers")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostValidContactDetailWithTenDigitPhoneNumbers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post Valid ContactDetail with ten digit phone numbers", null, new string[] {
                        "contactdetails"});
#line 48
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "PreferredContactMethod",
                        "2"});
            table6.AddRow(new string[] {
                        "MobileNumber",
                        "0772455294"});
            table6.AddRow(new string[] {
                        "HomeNumber",
                        "0125 455294"});
            table6.AddRow(new string[] {
                        "AlternativeNumber",
                        "01254 57611"});
            table6.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 49
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table6, "Given ");
#line 56
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "PreferredContactMethod",
                        "2"});
            table7.AddRow(new string[] {
                        "MobileNumber",
                        "0772455294"});
            table7.AddRow(new string[] {
                        "HomeNumber",
                        "0125 455294"});
            table7.AddRow(new string[] {
                        "AlternativeNumber",
                        "01254 57611"});
            table7.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 57
  testRunner.And("the response body should contain:", ((string)(null)), table7, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail Mandatory PreferredContactMethod Field missing")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailMandatoryPreferredContactMethodFieldMissing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail Mandatory PreferredContactMethod Field missing", null, new string[] {
                        "contactdetails"});
#line 66
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table8.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table8.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table8.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table8.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 67
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table8, "Given ");
#line 74
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with invalid PreferredContactMethod Value")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithInvalidPreferredContactMethodValue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with invalid PreferredContactMethod Value", null, new string[] {
                        "contactdetails"});
#line 78
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "PreferredContactMethod",
                        "12"});
            table9.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table9.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table9.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table9.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table9.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 79
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table9, "Given ");
#line 87
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with Invalid MobileNumber")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithInvalidMobileNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with Invalid MobileNumber", null, new string[] {
                        "contactdetails"});
#line 91
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table10.AddRow(new string[] {
                        "MobileNumber",
                        "012345678901234567890"});
            table10.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table10.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table10.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table10.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 92
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table10, "Given ");
#line 100
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with Invalid HomeNumber")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithInvalidHomeNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with Invalid HomeNumber", null, new string[] {
                        "contactdetails"});
#line 104
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table11.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table11.AddRow(new string[] {
                        "HomeNumber",
                        "012345678901234567890"});
            table11.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table11.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table11.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 105
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table11, "Given ");
#line 113
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with Invalid AlternativeNumber")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithInvalidAlternativeNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with Invalid AlternativeNumber", null, new string[] {
                        "contactdetails"});
#line 117
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table12.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table12.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table12.AddRow(new string[] {
                        "AlternativeNumber",
                        "012345678901234567890"});
            table12.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table12.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 118
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table12, "Given ");
#line 126
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with Invalid EmailAddress")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithInvalidEmailAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with Invalid EmailAddress", null, new string[] {
                        "contactdetails"});
#line 130
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table13.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table13.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table13.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table13.AddRow(new string[] {
                        "EmailAddress",
                        "customercustomer.com"});
            table13.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-08-20T11:46:02.4482612Z"});
#line 131
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table13, "Given ");
#line 139
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with Invalid LastModifiedDate")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithInvalidLastModifiedDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with Invalid LastModifiedDate", null, new string[] {
                        "contactdetails"});
#line 143
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table14.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table14.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table14.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table14.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table14.AddRow(new string[] {
                        "LastModifiedDate",
                        "2033-08-20T11:46:02.4482612Z"});
#line 144
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table14, "Given ");
#line 152
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with missing PreferredContactMethod - email")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithMissingPreferredContactMethod_Email()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with missing PreferredContactMethod - email", null, new string[] {
                        "contactdetails"});
#line 156
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table15.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table15.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table15.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table15.AddRow(new string[] {
                        "LastModifiedDate",
                        "2033-08-20T11:46:02.4482612Z"});
#line 157
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table15, "Given ");
#line 164
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with missing PreferredContactMethod - mobile")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithMissingPreferredContactMethod_Mobile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with missing PreferredContactMethod - mobile", null, new string[] {
                        "contactdetails"});
#line 168
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "PreferredContactMethod",
                        "2"});
            table16.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table16.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table16.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table16.AddRow(new string[] {
                        "LastModifiedDate",
                        "2033-08-20T11:46:02.4482612Z"});
#line 169
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table16, "Given ");
#line 176
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with missing PreferredContactMethod - phone")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithMissingPreferredContactMethod_Phone()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with missing PreferredContactMethod - phone", null, new string[] {
                        "contactdetails"});
#line 180
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "PreferredContactMethod",
                        "3"});
            table17.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
            table17.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table17.AddRow(new string[] {
                        "LastModifiedDate",
                        "2033-08-20T11:46:02.4482612Z"});
#line 181
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table17, "Given ");
#line 187
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail with missing PreferredContactMethod - SMS")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWithMissingPreferredContactMethod_SMS()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail with missing PreferredContactMethod - SMS", null, new string[] {
                        "contactdetails"});
#line 191
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "PreferredContactMethod",
                        "4"});
            table18.AddRow(new string[] {
                        "HomeNumber",
                        "08654 123456"});
            table18.AddRow(new string[] {
                        "AlternativeNumber",
                        "07564656766"});
            table18.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
            table18.AddRow(new string[] {
                        "LastModifiedDate",
                        "2033-08-20T11:46:02.4482612Z"});
#line 192
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table18, "Given ");
#line 199
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Post ContactDetail where one already exists")]
        [NUnit.Framework.CategoryAttribute("contactdetails")]
        public virtual void PostContactDetailWhereOneAlreadyExists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Post ContactDetail where one already exists", null, new string[] {
                        "contactdetails"});
#line 204
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "PreferredContactMethod",
                        "1"});
            table19.AddRow(new string[] {
                        "EmailAddress",
                        "customer@customer.com"});
#line 205
  testRunner.Given("I post a Contact with the following details:", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "PreferredContactMethod",
                        "2"});
            table20.AddRow(new string[] {
                        "MobileNumber",
                        "07676 123456"});
#line 209
  testRunner.And("I post a Contact with the following details:", ((string)(null)), table20, "And ");
#line 213
  testRunner.Then("there should be a 409 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

