// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Customer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Search")]
    public partial class SearchFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Search.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Search", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search without searchterm")]
        public virtual void SearchWithoutSearchterm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search without searchterm", null, ((string[])(null)));
#line 5
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table1.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 6
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "parameter1",
                        ""});
            table2.AddRow(new string[] {
                        "parameter2",
                        ""});
#line 10
  testRunner.When("I search for:", ((string)(null)), table2, "When ");
#line 14
  testRunner.Then("there should be a 204 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Customer by FamilyName")]
        public virtual void GetCustomerByFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer by FamilyName", null, ((string[])(null)));
#line 17
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table3.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 18
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "parameter1",
                        "FamilyName"});
            table4.AddRow(new string[] {
                        "parameter2",
                        "Binks"});
#line 22
  testRunner.When("I search for:", ((string)(null)), table4, "When ");
#line 26
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 27
  testRunner.And("all returned Customers should contain:", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Customer by GivenName")]
        public virtual void GetCustomerByGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer by GivenName", null, ((string[])(null)));
#line 31
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "GivenName",
                        "Thomas"});
            table6.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 32
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table6, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table7.AddRow(new string[] {
                        "parameter2",
                        "Thomas"});
#line 36
  testRunner.When("I search for:", ((string)(null)), table7, "When ");
#line 40
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "GivenName",
                        "Thomas"});
#line 41
  testRunner.And("all returned Customers should contain:", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Customer by uln")]
        public virtual void GetCustomerByUln()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer by uln", null, ((string[])(null)));
#line 45
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "GivenName",
                        "Thomas"});
            table9.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table9.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "7538571268"});
#line 46
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "parameter1",
                        "UniqueLearnerNumber"});
            table10.AddRow(new string[] {
                        "parameter2",
                        "7538571268"});
#line 51
  testRunner.When("I search for:", ((string)(null)), table10, "When ");
#line 55
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "7538571268"});
#line 56
  testRunner.And("all returned Customers should contain:", ((string)(null)), table11, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Customer by dob")]
        public virtual void GetCustomerByDob()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer by dob", null, ((string[])(null)));
#line 61
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table12.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table12.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26"});
#line 62
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table12, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "parameter1",
                        "DateofBirth"});
            table13.AddRow(new string[] {
                        "parameter2",
                        "2005-07-26"});
#line 67
  testRunner.When("I search for:", ((string)(null)), table13, "When ");
#line 71
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
#line 72
  testRunner.And("all returned Customers should contain:", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName")]
        public virtual void SearchForPartialGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName", null, ((string[])(null)));
#line 76
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table15.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 77
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table15, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table16.AddRow(new string[] {
                        "parameter2",
                        "Edw"});
#line 81
  testRunner.When("I search for:", ((string)(null)), table16, "When ");
#line 85
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
#line 86
  testRunner.And("all returned Customers should contain:", ((string)(null)), table17, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial FamilyName")]
        public virtual void SearchForPartialFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial FamilyName", null, ((string[])(null)));
#line 91
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table18.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 92
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table18, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "parameter1",
                        "FamilyName"});
            table19.AddRow(new string[] {
                        "parameter2",
                        "Bin"});
#line 96
  testRunner.When("I search for:", ((string)(null)), table19, "When ");
#line 100
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
#line 101
  testRunner.And("all returned Customers should contain:", ((string)(null)), table20, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and Full FamilyName")]
        public virtual void SearchForPartialGivenNameAndFullFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and Full FamilyName", null, ((string[])(null)));
#line 106
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table21.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 107
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table21, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table22.AddRow(new string[] {
                        "parameter2",
                        "Edw"});
            table22.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table22.AddRow(new string[] {
                        "parameter4",
                        "Binks"});
#line 111
  testRunner.When("I search for:", ((string)(null)), table22, "When ");
#line 117
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
            table23.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 118
  testRunner.And("all returned Customers should contain:", ((string)(null)), table23, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and Partial FamilyName")]
        public virtual void SearchForPartialGivenNameAndPartialFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and Partial FamilyName", null, ((string[])(null)));
#line 123
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table24.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 124
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table24, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table25.AddRow(new string[] {
                        "parameter2",
                        "Edw"});
            table25.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table25.AddRow(new string[] {
                        "parameter4",
                        "Binks"});
#line 128
  testRunner.When("I search for:", ((string)(null)), table25, "When ");
#line 134
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
            table26.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
#line 135
  testRunner.And("all returned Customers should contain:", ((string)(null)), table26, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for full GivenName and Full FamilyName")]
        public virtual void SearchForFullGivenNameAndFullFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for full GivenName and Full FamilyName", null, ((string[])(null)));
#line 140
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table27.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 141
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table27, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table28.AddRow(new string[] {
                        "parameter2",
                        "Edward"});
            table28.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table28.AddRow(new string[] {
                        "parameter4",
                        "Binks"});
#line 145
  testRunner.When("I search for:", ((string)(null)), table28, "When ");
#line 151
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table29.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 152
  testRunner.And("all returned Customers should contain:", ((string)(null)), table29, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for full GivenName and Partial FamilyName")]
        public virtual void SearchForFullGivenNameAndPartialFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for full GivenName and Partial FamilyName", null, ((string[])(null)));
#line 158
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table30.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 159
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table30, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table31.AddRow(new string[] {
                        "parameter2",
                        "Edward"});
            table31.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table31.AddRow(new string[] {
                        "parameter4",
                        "Bin"});
#line 163
  testRunner.When("I search for:", ((string)(null)), table31, "When ");
#line 169
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table32.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
#line 170
  testRunner.And("all returned Customers should contain:", ((string)(null)), table32, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and uln")]
        public virtual void SearchForPartialGivenNameAndUln()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and uln", null, ((string[])(null)));
#line 176
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table33.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table33.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9753113579"});
#line 177
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table34.AddRow(new string[] {
                        "parameter2",
                        "Edw"});
            table34.AddRow(new string[] {
                        "parameter3",
                        "UniqueLearnerNumber"});
            table34.AddRow(new string[] {
                        "parameter4",
                        "9753113579"});
#line 182
  testRunner.When("I search for:", ((string)(null)), table34, "When ");
#line 188
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table35.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
            table35.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9753113579"});
#line 189
  testRunner.And("all returned Customers should contain:", ((string)(null)), table35, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and DoB")]
        public virtual void SearchForPartialGivenNameAndDoB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and DoB", null, ((string[])(null)));
#line 195
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table36.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table36.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26"});
#line 196
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table36, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table37.AddRow(new string[] {
                        "parameter2",
                        "Edw"});
            table37.AddRow(new string[] {
                        "parameter3",
                        "DateofBirth"});
            table37.AddRow(new string[] {
                        "parameter4",
                        "2005-07-26"});
#line 201
  testRunner.When("I search for:", ((string)(null)), table37, "When ");
#line 207
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table38.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
            table38.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
#line 208
  testRunner.And("all returned Customers should contain:", ((string)(null)), table38, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Customer by uln & DoB")]
        public virtual void GetCustomerByUlnDoB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer by uln & DoB", null, ((string[])(null)));
#line 218
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "GivenName",
                        "Thomas"});
            table39.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table39.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26"});
            table39.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "7538571268"});
#line 219
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table39, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "parameter1",
                        "UniqueLearnerNumber"});
            table40.AddRow(new string[] {
                        "parameter2",
                        "7538571268"});
            table40.AddRow(new string[] {
                        "parameter3",
                        "DateofBirth"});
            table40.AddRow(new string[] {
                        "parameter4",
                        "2005-07-26"});
#line 225
  testRunner.When("I search for:", ((string)(null)), table40, "When ");
#line 231
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26"});
            table41.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "7538571268"});
#line 232
  testRunner.And("all returned Customers should contain:", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Customer by firstName & uln & DoB")]
        public virtual void GetCustomerByFirstNameUlnDoB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer by firstName & uln & DoB", null, ((string[])(null)));
#line 238
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "GivenName",
                        "Thomas"});
            table42.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table42.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26"});
            table42.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "7538571268"});
#line 239
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table42, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table43.AddRow(new string[] {
                        "parameter2",
                        "Thomas"});
            table43.AddRow(new string[] {
                        "parameter3",
                        "UniqueLearnerNumber"});
            table43.AddRow(new string[] {
                        "parameter4",
                        "7538571268"});
            table43.AddRow(new string[] {
                        "parameter5",
                        "DateofBirth"});
            table43.AddRow(new string[] {
                        "parameter6",
                        "2005-07-26"});
#line 245
  testRunner.When("I search for:", ((string)(null)), table43, "When ");
#line 253
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "GivenName",
                        "Thomas"});
            table44.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26"});
            table44.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "7538571268"});
#line 254
  testRunner.And("all returned Customers should contain:", ((string)(null)), table44, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and Partial FamilyName with space after GivenName")]
        public virtual void SearchForPartialGivenNameAndPartialFamilyNameWithSpaceAfterGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and Partial FamilyName with space after GivenName", null, ((string[])(null)));
#line 262
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table45.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 263
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table45, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table46.AddRow(new string[] {
                        "parameter2",
                        "Edw + space"});
            table46.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table46.AddRow(new string[] {
                        "parameter4",
                        "Binks"});
#line 267
  testRunner.When("I search for:", ((string)(null)), table46, "When ");
#line 273
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
            table47.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
#line 274
  testRunner.And("all returned Customers should contain:", ((string)(null)), table47, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and Partial FamilyName with double space after Given" +
            "Name")]
        public virtual void SearchForPartialGivenNameAndPartialFamilyNameWithDoubleSpaceAfterGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and Partial FamilyName with double space after Given" +
                    "Name", null, ((string[])(null)));
#line 279
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table48.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
#line 280
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table48, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table49.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table49.AddRow(new string[] {
                        "parameter2",
                        "Edw  + space"});
            table49.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table49.AddRow(new string[] {
                        "parameter4",
                        "Binks"});
#line 284
  testRunner.When("I search for:", ((string)(null)), table49, "When ");
#line 290
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
            table50.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
#line 291
  testRunner.And("all returned Customers should contain:", ((string)(null)), table50, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and DateOfBirth with space after GivenName")]
        public virtual void SearchForPartialGivenNameAndDateOfBirthWithSpaceAfterGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and DateOfBirth with space after GivenName", null, ((string[])(null)));
#line 296
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table51.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table51.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table51.AddRow(new string[] {
                        "DateofBirth",
                        "1988-06-06T00:00:00Z"});
#line 297
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table51, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table52.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table52.AddRow(new string[] {
                        "parameter2",
                        "Edw + space"});
            table52.AddRow(new string[] {
                        "parameter3",
                        "DateofBirth"});
            table52.AddRow(new string[] {
                        "parameter4",
                        "1988-06-06"});
#line 302
  testRunner.When("I search for:", ((string)(null)), table52, "When ");
#line 308
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table53.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
            table53.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
            table53.AddRow(new string[] {
                        "DateofBirth",
                        "1988-06-06"});
#line 309
  testRunner.And("all returned Customers should contain:", ((string)(null)), table53, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for DateofBirth and GivenName with space after DoB")]
        public virtual void SearchForDateofBirthAndGivenNameWithSpaceAfterDoB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for DateofBirth and GivenName with space after DoB", null, ((string[])(null)));
#line 316
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table54.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table54.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table54.AddRow(new string[] {
                        "DateofBirth",
                        "1988-06-06T00:00:00Z"});
#line 317
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table54, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "parameter1",
                        "DateofBirth"});
            table55.AddRow(new string[] {
                        "parameter2",
                        "1988-06-06 + space"});
            table55.AddRow(new string[] {
                        "parameter3",
                        "GivenName"});
            table55.AddRow(new string[] {
                        "parameter4",
                        "Edward"});
#line 322
  testRunner.When("I search for:", ((string)(null)), table55, "When ");
#line 328
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table56.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table56.AddRow(new string[] {
                        "DateofBirth",
                        "1988-06-06"});
#line 329
  testRunner.And("all returned Customers should contain:", ((string)(null)), table56, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for ULN and GivenName with space after ULN")]
        public virtual void SearchForULNAndGivenNameWithSpaceAfterULN()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for ULN and GivenName with space after ULN", null, ((string[])(null)));
#line 335
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table57.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table57.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table57.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
#line 336
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table57, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table58.AddRow(new string[] {
                        "parameter1",
                        "UniqueLearnerNumber"});
            table58.AddRow(new string[] {
                        "parameter2",
                        "9876543210 + space"});
            table58.AddRow(new string[] {
                        "parameter3",
                        "GivenName"});
            table58.AddRow(new string[] {
                        "parameter4",
                        "Edward"});
#line 341
  testRunner.When("I search for:", ((string)(null)), table58, "When ");
#line 347
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table59.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table59.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table59.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
#line 348
  testRunner.And("all returned Customers should contain:", ((string)(null)), table59, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for partial GivenName and Partial FamilyName and DateOfBirth with spaces")]
        public virtual void SearchForPartialGivenNameAndPartialFamilyNameAndDateOfBirthWithSpaces()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for partial GivenName and Partial FamilyName and DateOfBirth with spaces", null, ((string[])(null)));
#line 354
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "GivenName",
                        "Edward"});
            table60.AddRow(new string[] {
                        "FamilyName",
                        "Binks"});
            table60.AddRow(new string[] {
                        "DateofBirth",
                        "1999-01-22"});
#line 355
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table60, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table61.AddRow(new string[] {
                        "parameter1",
                        "GivenName"});
            table61.AddRow(new string[] {
                        "parameter2",
                        "Edw + space"});
            table61.AddRow(new string[] {
                        "parameter3",
                        "FamilyName"});
            table61.AddRow(new string[] {
                        "parameter4",
                        "Bin + space"});
            table61.AddRow(new string[] {
                        "parameter5",
                        "DateofBirth"});
            table61.AddRow(new string[] {
                        "parameter6",
                        "1999-01-22"});
#line 360
  testRunner.When("I search for:", ((string)(null)), table61, "When ");
#line 368
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table62.AddRow(new string[] {
                        "GivenName",
                        "Edw"});
            table62.AddRow(new string[] {
                        "FamilyName",
                        "Bin"});
            table62.AddRow(new string[] {
                        "DateofBirth",
                        "1999-01-22"});
#line 369
  testRunner.And("all returned Customers should contain:", ((string)(null)), table62, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
