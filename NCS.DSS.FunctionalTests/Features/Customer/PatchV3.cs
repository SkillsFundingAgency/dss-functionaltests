// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Customer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PatchV3")]
    [NUnit.Framework.CategoryAttribute("postV3")]
    [NUnit.Framework.CategoryAttribute("patchV3")]
    public partial class PatchV3Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PatchV3.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PatchV3", null, ProgrammingLanguage.CSharp, new string[] {
                        "postV3",
                        "patchV3"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfRegistration")]
        [NUnit.Framework.CategoryAttribute("customers")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        public virtual void PatchDateOfRegistration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfRegistration", null, new string[] {
                        "customers",
                        "smoke"});
#line 8
      this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table1.AddRow(new string[] {
                        "Title",
                        "1"});
            table1.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table1.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table1.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table1.AddRow(new string[] {
                        "Gender",
                        "1"});
            table1.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table1.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table1.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table1.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table1.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table1.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 9
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-28T16:11:00Z"});
#line 23
  testRunner.When("I patch the following:", ((string)(null)), table2, "When ");
#line 26
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
  testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-28T16:11:00Z"});
            table3.AddRow(new string[] {
                        "Title",
                        "1"});
            table3.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table3.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table3.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table3.AddRow(new string[] {
                        "Gender",
                        "1"});
            table3.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table3.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table3.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table3.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table3.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 28
  testRunner.And("the response body should contain:", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Title")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchTitle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Title", null, new string[] {
                        "customers"});
#line 45
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table4.AddRow(new string[] {
                        "Title",
                        "1"});
            table4.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table4.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table4.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table4.AddRow(new string[] {
                        "Gender",
                        "1"});
            table4.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table4.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table4.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table4.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table4.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table4.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 46
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Title",
                        "2"});
#line 60
  testRunner.When("I patch the following via a different touchpoint", ((string)(null)), table5, "When ");
#line 63
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
  testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
  testRunner.And("the response body should have different LastUpdatedBy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table6.AddRow(new string[] {
                        "Title",
                        "2"});
            table6.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table6.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table6.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table6.AddRow(new string[] {
                        "Gender",
                        "1"});
            table6.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table6.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table6.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table6.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table6.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 66
  testRunner.And("the response body should contain:", ((string)(null)), table6, "And ");
#line 79
     testRunner.And("there should be a record in the customers ChangeFeed table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
  testRunner.And("there should be a record in the customers-history ChangeFeed table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch GivenName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch GivenName", null, new string[] {
                        "customers"});
#line 84
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table7.AddRow(new string[] {
                        "Title",
                        "1"});
            table7.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table7.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table7.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table7.AddRow(new string[] {
                        "Gender",
                        "1"});
            table7.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table7.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table7.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table7.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table7.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table7.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 85
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "GivenName",
                        "Bill"});
#line 99
  testRunner.When("I patch the following:", ((string)(null)), table8, "When ");
#line 102
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table9.AddRow(new string[] {
                        "Title",
                        "1"});
            table9.AddRow(new string[] {
                        "GivenName",
                        "Bill"});
            table9.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table9.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table9.AddRow(new string[] {
                        "Gender",
                        "1"});
            table9.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table9.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table9.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table9.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table9.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 103
  testRunner.And("the response body should contain:", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch FamilyName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchFamilyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch FamilyName", null, new string[] {
                        "customers"});
#line 119
    this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table10.AddRow(new string[] {
                        "Title",
                        "1"});
            table10.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table10.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table10.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table10.AddRow(new string[] {
                        "Gender",
                        "1"});
            table10.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table10.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table10.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table10.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table10.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table10.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 120
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "FamilyName",
                        "Update"});
#line 134
  testRunner.When("I patch the following:", ((string)(null)), table11, "When ");
#line 137
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table12.AddRow(new string[] {
                        "Title",
                        "1"});
            table12.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table12.AddRow(new string[] {
                        "FamilyName",
                        "Update"});
            table12.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table12.AddRow(new string[] {
                        "Gender",
                        "1"});
            table12.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table12.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table12.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table12.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table12.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 138
  testRunner.And("the response body should contain:", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateofBirth")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateofBirth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateofBirth", null, new string[] {
                        "customers"});
#line 154
      this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table13.AddRow(new string[] {
                        "Title",
                        "1"});
            table13.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table13.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table13.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table13.AddRow(new string[] {
                        "Gender",
                        "1"});
            table13.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table13.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table13.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table13.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table13.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table13.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 155
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-27T13:45:00Z"});
#line 169
  testRunner.When("I patch the following:", ((string)(null)), table14, "When ");
#line 172
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table15.AddRow(new string[] {
                        "Title",
                        "1"});
            table15.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table15.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table15.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-27T13:45:00Z"});
            table15.AddRow(new string[] {
                        "Gender",
                        "1"});
            table15.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table15.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table15.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table15.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table15.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 173
  testRunner.And("the response body should contain:", ((string)(null)), table15, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Gender")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGender()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Gender", null, new string[] {
                        "customers"});
#line 189
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table16.AddRow(new string[] {
                        "Title",
                        "1"});
            table16.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table16.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table16.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table16.AddRow(new string[] {
                        "Gender",
                        "1"});
            table16.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table16.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table16.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table16.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table16.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table16.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 190
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Gender",
                        "2"});
#line 204
  testRunner.When("I patch the following:", ((string)(null)), table17, "When ");
#line 207
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table18.AddRow(new string[] {
                        "Title",
                        "1"});
            table18.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table18.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table18.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table18.AddRow(new string[] {
                        "Gender",
                        "2"});
            table18.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table18.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table18.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table18.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table18.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 208
  testRunner.And("the response body should contain:", ((string)(null)), table18, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch UniqueLearnerNumber")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchUniqueLearnerNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch UniqueLearnerNumber", null, new string[] {
                        "customers"});
#line 224
    this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table19.AddRow(new string[] {
                        "Title",
                        "1"});
            table19.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table19.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table19.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table19.AddRow(new string[] {
                        "Gender",
                        "1"});
            table19.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table19.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table19.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table19.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table19.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table19.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 225
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543211"});
#line 239
  testRunner.When("I patch the following:", ((string)(null)), table20, "When ");
#line 242
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table21.AddRow(new string[] {
                        "Title",
                        "1"});
            table21.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table21.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table21.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table21.AddRow(new string[] {
                        "Gender",
                        "1"});
            table21.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543211"});
            table21.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table21.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table21.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table21.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 243
  testRunner.And("the response body should contain:", ((string)(null)), table21, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInUserResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInUserResearch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInUserResearch", null, new string[] {
                        "customers"});
#line 259
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table22.AddRow(new string[] {
                        "Title",
                        "1"});
            table22.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table22.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table22.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table22.AddRow(new string[] {
                        "Gender",
                        "1"});
            table22.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table22.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table22.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table22.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table22.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table22.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 260
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table22, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table23.AddRow(new string[] {
                        "OptInUserResearch",
                        "false"});
#line 274
  testRunner.When("I patch the following:", ((string)(null)), table23, "When ");
#line 277
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table24.AddRow(new string[] {
                        "Title",
                        "1"});
            table24.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table24.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table24.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table24.AddRow(new string[] {
                        "Gender",
                        "1"});
            table24.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table24.AddRow(new string[] {
                        "OptInUserResearch",
                        "false"});
            table24.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table24.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table24.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 278
  testRunner.And("the response body should contain:", ((string)(null)), table24, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInMarketResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInMarketResearch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInMarketResearch", null, new string[] {
                        "customers"});
#line 294
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table25.AddRow(new string[] {
                        "Title",
                        "1"});
            table25.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table25.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table25.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table25.AddRow(new string[] {
                        "Gender",
                        "1"});
            table25.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table25.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table25.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table25.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table25.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table25.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 295
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table25, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "OptInMarketResearch",
                        "true"});
#line 309
  testRunner.When("I patch the following:", ((string)(null)), table26, "When ");
#line 312
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table27.AddRow(new string[] {
                        "Title",
                        "1"});
            table27.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table27.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table27.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table27.AddRow(new string[] {
                        "Gender",
                        "1"});
            table27.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table27.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table27.AddRow(new string[] {
                        "OptInMarketResearch",
                        "true"});
            table27.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table27.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 313
  testRunner.And("the response body should contain:", ((string)(null)), table27, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateOfTermination()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfTermination", null, new string[] {
                        "customers"});
#line 329
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table28.AddRow(new string[] {
                        "Title",
                        "1"});
            table28.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table28.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table28.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table28.AddRow(new string[] {
                        "Gender",
                        "1"});
            table28.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table28.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table28.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table28.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table28.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table28.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 330
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table28, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "DateOfTermination",
                        "2018-08-27T14:45:00Z"});
#line 344
  testRunner.When("I patch the following:", ((string)(null)), table29, "When ");
#line 347
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table30.AddRow(new string[] {
                        "Title",
                        "1"});
            table30.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table30.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table30.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table30.AddRow(new string[] {
                        "Gender",
                        "1"});
            table30.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table30.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table30.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table30.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table30.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 348
  testRunner.And("the response body should contain:", ((string)(null)), table30, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch ReasonForTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchReasonForTermination()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch ReasonForTermination", null, new string[] {
                        "customers"});
#line 364
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table31.AddRow(new string[] {
                        "Title",
                        "1"});
            table31.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table31.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table31.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table31.AddRow(new string[] {
                        "Gender",
                        "1"});
            table31.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table31.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table31.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table31.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table31.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table31.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 365
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "ReasonForTermination",
                        "2"});
            table32.AddRow(new string[] {
                        "DateOfTermination",
                        "2018-07-27T16:11:00Z"});
#line 379
  testRunner.When("I patch the following:", ((string)(null)), table32, "When ");
#line 383
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table33.AddRow(new string[] {
                        "Title",
                        "1"});
            table33.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table33.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table33.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table33.AddRow(new string[] {
                        "Gender",
                        "1"});
            table33.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table33.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table33.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table33.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table33.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table33.AddRow(new string[] {
                        "ReasonForTermination",
                        "2"});
            table33.AddRow(new string[] {
                        "DateOfTermination",
                        "2018-07-27T16:11:00Z"});
#line 384
  testRunner.And("the response body should contain:", ((string)(null)), table33, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedBy")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedBy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedBy", null, new string[] {
                        "customers"});
#line 402
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table34.AddRow(new string[] {
                        "Title",
                        "1"});
            table34.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table34.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table34.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table34.AddRow(new string[] {
                        "Gender",
                        "1"});
            table34.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table34.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table34.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table34.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table34.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table34.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 403
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table34, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "IntroducedBy",
                        "2"});
#line 417
  testRunner.When("I patch the following:", ((string)(null)), table35, "When ");
#line 420
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table36.AddRow(new string[] {
                        "Title",
                        "1"});
            table36.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table36.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table36.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table36.AddRow(new string[] {
                        "Gender",
                        "1"});
            table36.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table36.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table36.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table36.AddRow(new string[] {
                        "IntroducedBy",
                        "2"});
            table36.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
#line 421
  testRunner.And("the response body should contain:", ((string)(null)), table36, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedByAdditionalInfo")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedByAdditionalInfo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedByAdditionalInfo", null, new string[] {
                        "customers"});
#line 437
     this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table37.AddRow(new string[] {
                        "Title",
                        "1"});
            table37.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table37.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table37.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table37.AddRow(new string[] {
                        "Gender",
                        "1"});
            table37.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table37.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table37.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table37.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table37.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table37.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 438
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table37, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "updated info"});
#line 452
  testRunner.When("I patch the following:", ((string)(null)), table38, "When ");
#line 455
  testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table39.AddRow(new string[] {
                        "Title",
                        "1"});
            table39.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table39.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table39.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table39.AddRow(new string[] {
                        "Gender",
                        "1"});
            table39.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table39.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table39.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table39.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table39.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "updated info"});
#line 456
  testRunner.And("the response body should contain:", ((string)(null)), table39, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch With Existing DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchWithExistingDateOfTermination()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch With Existing DateOfTermination", null, new string[] {
                        "customers"});
#line 471
    this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "DateOfRegistration",
                        "2018-07-27T16:11:00Z"});
            table40.AddRow(new string[] {
                        "Title",
                        "1"});
            table40.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table40.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
            table40.AddRow(new string[] {
                        "DateofBirth",
                        "2005-07-26T13:45:00Z"});
            table40.AddRow(new string[] {
                        "Gender",
                        "1"});
            table40.AddRow(new string[] {
                        "UniqueLearnerNumber",
                        "9876543210"});
            table40.AddRow(new string[] {
                        "OptInUserResearch",
                        "true"});
            table40.AddRow(new string[] {
                        "OptInMarketResearch",
                        "false"});
            table40.AddRow(new string[] {
                        "DateOfTermination",
                        "2018-07-27T14:45:00Z"});
            table40.AddRow(new string[] {
                        "ReasonForTermination",
                        "1"});
            table40.AddRow(new string[] {
                        "IntroducedBy",
                        "1"});
            table40.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "additional info"});
            table40.AddRow(new string[] {
                        "LastModifiedDate",
                        "2018-06-21T14:45:00Z"});
#line 472
  testRunner.Given("I post a Customer with the following details:", ((string)(null)), table40, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "IntroducedByAdditionalInfo",
                        "updated info"});
#line 488
  testRunner.When("I patch the following:", ((string)(null)), table41, "When ");
#line 491
  testRunner.Then("there should be a 403 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

