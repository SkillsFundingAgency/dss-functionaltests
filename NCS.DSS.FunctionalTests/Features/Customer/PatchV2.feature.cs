// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Customer
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CustomerPatchV2")]
    public partial class CustomerPatchV2Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PatchV2.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Customer", "CustomerPatchV2", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfRegistration")]
        [NUnit.Framework.CategoryAttribute("customers")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        public virtual void PatchDateOfRegistration()
        {
            string[] tagsOfScenario = new string[] {
                    "customers",
                    "smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfRegistration", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table303.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table303.AddRow(new string[] {
                            "Title",
                            "1"});
                table303.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table303.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table303.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table303.AddRow(new string[] {
                            "Gender",
                            "1"});
                table303.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table303.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table303.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table303.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table303.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table303.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 5
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table303, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table304.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-28T16:11:00Z"});
#line 19
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table304, "When ");
#line hidden
#line 22
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table305.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-28T16:11:00Z"});
                table305.AddRow(new string[] {
                            "Title",
                            "1"});
                table305.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table305.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table305.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table305.AddRow(new string[] {
                            "Gender",
                            "1"});
                table305.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table305.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table305.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table305.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table305.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 24
 testRunner.And("the response body should contain:", ((string)(null)), table305, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Title")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchTitle()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Title", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table306.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table306.AddRow(new string[] {
                            "Title",
                            "1"});
                table306.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table306.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table306.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table306.AddRow(new string[] {
                            "Gender",
                            "1"});
                table306.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table306.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table306.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table306.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table306.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table306.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 40
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table306, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table307.AddRow(new string[] {
                            "Title",
                            "2"});
#line 54
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table307, "When ");
#line hidden
#line 57
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table308.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table308.AddRow(new string[] {
                            "Title",
                            "2"});
                table308.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table308.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table308.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table308.AddRow(new string[] {
                            "Gender",
                            "1"});
                table308.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table308.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table308.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table308.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table308.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 60
 testRunner.And("the response body should contain:", ((string)(null)), table308, "And ");
#line hidden
#line 73
 testRunner.Given("I wait for 10 Seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
 testRunner.Then("there should be a record in the dss-customers table with CustomerId", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch GivenName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGivenName()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch GivenName", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 78
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table309.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table309.AddRow(new string[] {
                            "Title",
                            "1"});
                table309.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table309.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table309.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table309.AddRow(new string[] {
                            "Gender",
                            "1"});
                table309.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table309.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table309.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table309.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table309.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table309.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 79
 testRunner.Given("I post a Customer with the following details:", ((string)(null)), table309, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table310.AddRow(new string[] {
                            "GivenName",
                            "Bill"});
#line 93
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table310, "When ");
#line hidden
#line 96
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table311.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table311.AddRow(new string[] {
                            "Title",
                            "1"});
                table311.AddRow(new string[] {
                            "GivenName",
                            "Bill"});
                table311.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table311.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table311.AddRow(new string[] {
                            "Gender",
                            "1"});
                table311.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table311.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table311.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table311.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table311.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 97
 testRunner.And("the response body should contain:", ((string)(null)), table311, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch FamilyName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchFamilyName()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch FamilyName", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table312.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table312.AddRow(new string[] {
                            "Title",
                            "1"});
                table312.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table312.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table312.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table312.AddRow(new string[] {
                            "Gender",
                            "1"});
                table312.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table312.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table312.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table312.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table312.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table312.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 113
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table312, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table313 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table313.AddRow(new string[] {
                            "FamilyName",
                            "Update"});
#line 127
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table313, "When ");
#line hidden
#line 130
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table314 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table314.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table314.AddRow(new string[] {
                            "Title",
                            "1"});
                table314.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table314.AddRow(new string[] {
                            "FamilyName",
                            "Update"});
                table314.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table314.AddRow(new string[] {
                            "Gender",
                            "1"});
                table314.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table314.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table314.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table314.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table314.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 131
 testRunner.And("the response body should contain:", ((string)(null)), table314, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateofBirth")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateofBirth()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateofBirth", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 146
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table315 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table315.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table315.AddRow(new string[] {
                            "Title",
                            "1"});
                table315.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table315.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table315.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table315.AddRow(new string[] {
                            "Gender",
                            "1"});
                table315.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table315.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table315.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table315.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table315.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table315.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 147
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table315, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table316 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table316.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-27T13:45:00Z"});
#line 161
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table316, "When ");
#line hidden
#line 164
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table317 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table317.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table317.AddRow(new string[] {
                            "Title",
                            "1"});
                table317.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table317.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table317.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-27T13:45:00Z"});
                table317.AddRow(new string[] {
                            "Gender",
                            "1"});
                table317.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table317.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table317.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table317.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table317.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 165
 testRunner.And("the response body should contain:", ((string)(null)), table317, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Gender")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGender()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Gender", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 180
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table318 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table318.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table318.AddRow(new string[] {
                            "Title",
                            "1"});
                table318.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table318.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table318.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table318.AddRow(new string[] {
                            "Gender",
                            "1"});
                table318.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table318.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table318.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table318.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table318.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table318.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 181
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table318, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table319 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table319.AddRow(new string[] {
                            "Gender",
                            "2"});
#line 195
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table319, "When ");
#line hidden
#line 198
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table320 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table320.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table320.AddRow(new string[] {
                            "Title",
                            "1"});
                table320.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table320.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table320.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table320.AddRow(new string[] {
                            "Gender",
                            "2"});
                table320.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table320.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table320.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table320.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table320.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 199
 testRunner.And("the response body should contain:", ((string)(null)), table320, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch UniqueLearnerNumber")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchUniqueLearnerNumber()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch UniqueLearnerNumber", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 214
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table321 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table321.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table321.AddRow(new string[] {
                            "Title",
                            "1"});
                table321.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table321.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table321.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table321.AddRow(new string[] {
                            "Gender",
                            "1"});
                table321.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table321.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table321.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table321.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table321.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table321.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 215
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table321, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table322 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table322.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543211"});
#line 229
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table322, "When ");
#line hidden
#line 232
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table323 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table323.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table323.AddRow(new string[] {
                            "Title",
                            "1"});
                table323.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table323.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table323.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table323.AddRow(new string[] {
                            "Gender",
                            "1"});
                table323.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543211"});
                table323.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table323.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table323.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table323.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 233
 testRunner.And("the response body should contain:", ((string)(null)), table323, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInUserResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInUserResearch()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInUserResearch", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 248
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table324 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table324.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table324.AddRow(new string[] {
                            "Title",
                            "1"});
                table324.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table324.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table324.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table324.AddRow(new string[] {
                            "Gender",
                            "1"});
                table324.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table324.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table324.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table324.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table324.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table324.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 249
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table324, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table325 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table325.AddRow(new string[] {
                            "OptInUserResearch",
                            "false"});
#line 263
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table325, "When ");
#line hidden
#line 266
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table326.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table326.AddRow(new string[] {
                            "Title",
                            "1"});
                table326.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table326.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table326.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table326.AddRow(new string[] {
                            "Gender",
                            "1"});
                table326.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table326.AddRow(new string[] {
                            "OptInUserResearch",
                            "false"});
                table326.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table326.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table326.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 267
 testRunner.And("the response body should contain:", ((string)(null)), table326, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInMarketResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInMarketResearch()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInMarketResearch", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 282
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table327.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table327.AddRow(new string[] {
                            "Title",
                            "1"});
                table327.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table327.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table327.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table327.AddRow(new string[] {
                            "Gender",
                            "1"});
                table327.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table327.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table327.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table327.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table327.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table327.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 283
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table327, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table328.AddRow(new string[] {
                            "OptInMarketResearch",
                            "true"});
#line 297
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table328, "When ");
#line hidden
#line 300
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table329.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table329.AddRow(new string[] {
                            "Title",
                            "1"});
                table329.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table329.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table329.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table329.AddRow(new string[] {
                            "Gender",
                            "1"});
                table329.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table329.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table329.AddRow(new string[] {
                            "OptInMarketResearch",
                            "true"});
                table329.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table329.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 301
 testRunner.And("the response body should contain:", ((string)(null)), table329, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateOfTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 316
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table330.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table330.AddRow(new string[] {
                            "Title",
                            "1"});
                table330.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table330.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table330.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table330.AddRow(new string[] {
                            "Gender",
                            "1"});
                table330.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table330.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table330.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table330.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table330.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table330.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 317
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table330, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table331.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-08-27T14:45:00Z"});
#line 331
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table331, "When ");
#line hidden
#line 334
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table332.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table332.AddRow(new string[] {
                            "Title",
                            "1"});
                table332.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table332.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table332.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table332.AddRow(new string[] {
                            "Gender",
                            "1"});
                table332.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table332.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table332.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table332.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table332.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 335
 testRunner.And("the response body should contain:", ((string)(null)), table332, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch ReasonForTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchReasonForTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch ReasonForTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 350
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table333.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table333.AddRow(new string[] {
                            "Title",
                            "1"});
                table333.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table333.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table333.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table333.AddRow(new string[] {
                            "Gender",
                            "1"});
                table333.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table333.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table333.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table333.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table333.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table333.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 351
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table333, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table334.AddRow(new string[] {
                            "ReasonForTermination",
                            "2"});
                table334.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T16:11:00Z"});
#line 365
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table334, "When ");
#line hidden
#line 369
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table335.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table335.AddRow(new string[] {
                            "Title",
                            "1"});
                table335.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table335.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table335.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table335.AddRow(new string[] {
                            "Gender",
                            "1"});
                table335.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table335.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table335.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table335.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table335.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table335.AddRow(new string[] {
                            "ReasonForTermination",
                            "2"});
                table335.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T16:11:00Z"});
#line 370
 testRunner.And("the response body should contain:", ((string)(null)), table335, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedBy")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedBy()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedBy", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 387
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table336.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table336.AddRow(new string[] {
                            "Title",
                            "1"});
                table336.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table336.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table336.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table336.AddRow(new string[] {
                            "Gender",
                            "1"});
                table336.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table336.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table336.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table336.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table336.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table336.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 388
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table336, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table337.AddRow(new string[] {
                            "IntroducedBy",
                            "2"});
#line 402
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table337, "When ");
#line hidden
#line 405
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table338.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table338.AddRow(new string[] {
                            "Title",
                            "1"});
                table338.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table338.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table338.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table338.AddRow(new string[] {
                            "Gender",
                            "1"});
                table338.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table338.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table338.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table338.AddRow(new string[] {
                            "IntroducedBy",
                            "2"});
                table338.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 406
 testRunner.And("the response body should contain:", ((string)(null)), table338, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedByAdditionalInfo")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedByAdditionalInfo()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedByAdditionalInfo", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 421
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table339.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table339.AddRow(new string[] {
                            "Title",
                            "1"});
                table339.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table339.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table339.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table339.AddRow(new string[] {
                            "Gender",
                            "1"});
                table339.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table339.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table339.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table339.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table339.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table339.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 422
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table339, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table340.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 436
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table340, "When ");
#line hidden
#line 439
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table341.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table341.AddRow(new string[] {
                            "Title",
                            "1"});
                table341.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table341.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table341.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table341.AddRow(new string[] {
                            "Gender",
                            "1"});
                table341.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table341.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table341.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table341.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table341.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 440
 testRunner.And("the response body should contain:", ((string)(null)), table341, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch With Existing DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchWithExistingDateOfTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch With Existing DateOfTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 455
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table342.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table342.AddRow(new string[] {
                            "Title",
                            "1"});
                table342.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table342.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table342.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table342.AddRow(new string[] {
                            "Gender",
                            "1"});
                table342.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table342.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table342.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table342.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T14:45:00Z"});
                table342.AddRow(new string[] {
                            "ReasonForTermination",
                            "1"});
                table342.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table342.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table342.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 456
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table342, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table343.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 472
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table343, "When ");
#line hidden
#line 475
 testRunner.Then("there should be a 403 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
