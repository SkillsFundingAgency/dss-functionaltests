// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Customer
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CustomerPatchV2")]
    public partial class CustomerPatchV2Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PatchV2.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Customer", "CustomerPatchV2", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfRegistration")]
        [NUnit.Framework.CategoryAttribute("customers")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        public virtual void PatchDateOfRegistration()
        {
            string[] tagsOfScenario = new string[] {
                    "customers",
                    "smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfRegistration", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table480 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table480.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table480.AddRow(new string[] {
                            "Title",
                            "1"});
                table480.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table480.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table480.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table480.AddRow(new string[] {
                            "Gender",
                            "1"});
                table480.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table480.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table480.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table480.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table480.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table480.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 5
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table480, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table481 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table481.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-28T16:11:00Z"});
#line 19
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table481, "When ");
#line hidden
#line 22
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table482 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table482.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-28T16:11:00Z"});
                table482.AddRow(new string[] {
                            "Title",
                            "1"});
                table482.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table482.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table482.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table482.AddRow(new string[] {
                            "Gender",
                            "1"});
                table482.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table482.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table482.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table482.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table482.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 24
 testRunner.And("the response body should contain:", ((string)(null)), table482, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Title")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchTitle()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Title", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table483 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table483.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table483.AddRow(new string[] {
                            "Title",
                            "1"});
                table483.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table483.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table483.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table483.AddRow(new string[] {
                            "Gender",
                            "1"});
                table483.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table483.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table483.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table483.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table483.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table483.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 40
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table483, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table484 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table484.AddRow(new string[] {
                            "Title",
                            "2"});
#line 54
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table484, "When ");
#line hidden
#line 57
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table485 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table485.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table485.AddRow(new string[] {
                            "Title",
                            "2"});
                table485.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table485.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table485.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table485.AddRow(new string[] {
                            "Gender",
                            "1"});
                table485.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table485.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table485.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table485.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table485.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 60
 testRunner.And("the response body should contain:", ((string)(null)), table485, "And ");
#line hidden
#line 73
 testRunner.Given("I wait for 10 Seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
 testRunner.Then("there should be a record in the dss-customers table with CustomerId", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch GivenName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGivenName()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch GivenName", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 78
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table486 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table486.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table486.AddRow(new string[] {
                            "Title",
                            "1"});
                table486.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table486.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table486.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table486.AddRow(new string[] {
                            "Gender",
                            "1"});
                table486.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table486.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table486.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table486.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table486.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table486.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 79
 testRunner.Given("I post a Customer with the following details:", ((string)(null)), table486, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table487 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table487.AddRow(new string[] {
                            "GivenName",
                            "Bill"});
#line 93
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table487, "When ");
#line hidden
#line 96
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table488 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table488.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table488.AddRow(new string[] {
                            "Title",
                            "1"});
                table488.AddRow(new string[] {
                            "GivenName",
                            "Bill"});
                table488.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table488.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table488.AddRow(new string[] {
                            "Gender",
                            "1"});
                table488.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table488.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table488.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table488.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table488.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 97
 testRunner.And("the response body should contain:", ((string)(null)), table488, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch FamilyName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchFamilyName()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch FamilyName", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table489 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table489.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table489.AddRow(new string[] {
                            "Title",
                            "1"});
                table489.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table489.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table489.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table489.AddRow(new string[] {
                            "Gender",
                            "1"});
                table489.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table489.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table489.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table489.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table489.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table489.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 113
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table489, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table490 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table490.AddRow(new string[] {
                            "FamilyName",
                            "Update"});
#line 127
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table490, "When ");
#line hidden
#line 130
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table491 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table491.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table491.AddRow(new string[] {
                            "Title",
                            "1"});
                table491.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table491.AddRow(new string[] {
                            "FamilyName",
                            "Update"});
                table491.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table491.AddRow(new string[] {
                            "Gender",
                            "1"});
                table491.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table491.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table491.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table491.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table491.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 131
 testRunner.And("the response body should contain:", ((string)(null)), table491, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateofBirth")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateofBirth()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateofBirth", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 146
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table492 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table492.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table492.AddRow(new string[] {
                            "Title",
                            "1"});
                table492.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table492.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table492.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table492.AddRow(new string[] {
                            "Gender",
                            "1"});
                table492.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table492.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table492.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table492.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table492.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table492.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 147
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table492, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table493 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table493.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-27T13:45:00Z"});
#line 161
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table493, "When ");
#line hidden
#line 164
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table494 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table494.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table494.AddRow(new string[] {
                            "Title",
                            "1"});
                table494.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table494.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table494.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-27T13:45:00Z"});
                table494.AddRow(new string[] {
                            "Gender",
                            "1"});
                table494.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table494.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table494.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table494.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table494.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 165
 testRunner.And("the response body should contain:", ((string)(null)), table494, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Gender")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGender()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Gender", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 180
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table495 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table495.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table495.AddRow(new string[] {
                            "Title",
                            "1"});
                table495.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table495.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table495.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table495.AddRow(new string[] {
                            "Gender",
                            "1"});
                table495.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table495.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table495.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table495.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table495.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table495.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 181
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table495, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table496 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table496.AddRow(new string[] {
                            "Gender",
                            "2"});
#line 195
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table496, "When ");
#line hidden
#line 198
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table497 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table497.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table497.AddRow(new string[] {
                            "Title",
                            "1"});
                table497.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table497.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table497.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table497.AddRow(new string[] {
                            "Gender",
                            "2"});
                table497.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table497.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table497.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table497.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table497.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 199
 testRunner.And("the response body should contain:", ((string)(null)), table497, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch UniqueLearnerNumber")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchUniqueLearnerNumber()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch UniqueLearnerNumber", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 214
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table498 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table498.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table498.AddRow(new string[] {
                            "Title",
                            "1"});
                table498.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table498.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table498.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table498.AddRow(new string[] {
                            "Gender",
                            "1"});
                table498.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table498.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table498.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table498.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table498.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table498.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 215
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table498, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table499 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table499.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543211"});
#line 229
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table499, "When ");
#line hidden
#line 232
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table500 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table500.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table500.AddRow(new string[] {
                            "Title",
                            "1"});
                table500.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table500.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table500.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table500.AddRow(new string[] {
                            "Gender",
                            "1"});
                table500.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543211"});
                table500.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table500.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table500.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table500.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 233
 testRunner.And("the response body should contain:", ((string)(null)), table500, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInUserResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInUserResearch()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInUserResearch", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 248
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table501 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table501.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table501.AddRow(new string[] {
                            "Title",
                            "1"});
                table501.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table501.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table501.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table501.AddRow(new string[] {
                            "Gender",
                            "1"});
                table501.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table501.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table501.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table501.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table501.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table501.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 249
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table501, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table502 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table502.AddRow(new string[] {
                            "OptInUserResearch",
                            "false"});
#line 263
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table502, "When ");
#line hidden
#line 266
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table503 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table503.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table503.AddRow(new string[] {
                            "Title",
                            "1"});
                table503.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table503.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table503.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table503.AddRow(new string[] {
                            "Gender",
                            "1"});
                table503.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table503.AddRow(new string[] {
                            "OptInUserResearch",
                            "false"});
                table503.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table503.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table503.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 267
 testRunner.And("the response body should contain:", ((string)(null)), table503, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInMarketResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInMarketResearch()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInMarketResearch", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 282
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table504 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table504.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table504.AddRow(new string[] {
                            "Title",
                            "1"});
                table504.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table504.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table504.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table504.AddRow(new string[] {
                            "Gender",
                            "1"});
                table504.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table504.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table504.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table504.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table504.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table504.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 283
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table504, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table505 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table505.AddRow(new string[] {
                            "OptInMarketResearch",
                            "true"});
#line 297
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table505, "When ");
#line hidden
#line 300
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table506 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table506.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table506.AddRow(new string[] {
                            "Title",
                            "1"});
                table506.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table506.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table506.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table506.AddRow(new string[] {
                            "Gender",
                            "1"});
                table506.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table506.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table506.AddRow(new string[] {
                            "OptInMarketResearch",
                            "true"});
                table506.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table506.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 301
 testRunner.And("the response body should contain:", ((string)(null)), table506, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateOfTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 316
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table507 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table507.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table507.AddRow(new string[] {
                            "Title",
                            "1"});
                table507.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table507.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table507.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table507.AddRow(new string[] {
                            "Gender",
                            "1"});
                table507.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table507.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table507.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table507.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table507.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table507.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 317
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table507, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table508 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table508.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-08-27T14:45:00Z"});
#line 331
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table508, "When ");
#line hidden
#line 334
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table509 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table509.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table509.AddRow(new string[] {
                            "Title",
                            "1"});
                table509.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table509.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table509.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table509.AddRow(new string[] {
                            "Gender",
                            "1"});
                table509.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table509.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table509.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table509.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table509.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 335
 testRunner.And("the response body should contain:", ((string)(null)), table509, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch ReasonForTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchReasonForTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch ReasonForTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 350
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table510 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table510.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table510.AddRow(new string[] {
                            "Title",
                            "1"});
                table510.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table510.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table510.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table510.AddRow(new string[] {
                            "Gender",
                            "1"});
                table510.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table510.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table510.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table510.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table510.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table510.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 351
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table510, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table511 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table511.AddRow(new string[] {
                            "ReasonForTermination",
                            "2"});
                table511.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T16:11:00Z"});
#line 365
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table511, "When ");
#line hidden
#line 369
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table512 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table512.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table512.AddRow(new string[] {
                            "Title",
                            "1"});
                table512.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table512.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table512.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table512.AddRow(new string[] {
                            "Gender",
                            "1"});
                table512.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table512.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table512.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table512.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table512.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table512.AddRow(new string[] {
                            "ReasonForTermination",
                            "2"});
                table512.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T16:11:00Z"});
#line 370
 testRunner.And("the response body should contain:", ((string)(null)), table512, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedBy")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedBy()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedBy", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 387
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table513 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table513.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table513.AddRow(new string[] {
                            "Title",
                            "1"});
                table513.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table513.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table513.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table513.AddRow(new string[] {
                            "Gender",
                            "1"});
                table513.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table513.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table513.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table513.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table513.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table513.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 388
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table513, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table514 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table514.AddRow(new string[] {
                            "IntroducedBy",
                            "2"});
#line 402
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table514, "When ");
#line hidden
#line 405
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table515 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table515.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table515.AddRow(new string[] {
                            "Title",
                            "1"});
                table515.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table515.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table515.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table515.AddRow(new string[] {
                            "Gender",
                            "1"});
                table515.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table515.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table515.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table515.AddRow(new string[] {
                            "IntroducedBy",
                            "2"});
                table515.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 406
 testRunner.And("the response body should contain:", ((string)(null)), table515, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedByAdditionalInfo")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedByAdditionalInfo()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedByAdditionalInfo", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 421
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table516 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table516.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table516.AddRow(new string[] {
                            "Title",
                            "1"});
                table516.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table516.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table516.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table516.AddRow(new string[] {
                            "Gender",
                            "1"});
                table516.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table516.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table516.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table516.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table516.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table516.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 422
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table516, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table517 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table517.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 436
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table517, "When ");
#line hidden
#line 439
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table518 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table518.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table518.AddRow(new string[] {
                            "Title",
                            "1"});
                table518.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table518.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table518.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table518.AddRow(new string[] {
                            "Gender",
                            "1"});
                table518.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table518.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table518.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table518.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table518.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 440
 testRunner.And("the response body should contain:", ((string)(null)), table518, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch With Existing DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchWithExistingDateOfTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch With Existing DateOfTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 455
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table519 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table519.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table519.AddRow(new string[] {
                            "Title",
                            "1"});
                table519.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table519.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table519.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table519.AddRow(new string[] {
                            "Gender",
                            "1"});
                table519.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table519.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table519.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table519.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T14:45:00Z"});
                table519.AddRow(new string[] {
                            "ReasonForTermination",
                            "1"});
                table519.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table519.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table519.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 456
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table519, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table520 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table520.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 472
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table520, "When ");
#line hidden
#line 475
 testRunner.Then("there should be a 403 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
