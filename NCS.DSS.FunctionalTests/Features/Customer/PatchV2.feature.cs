// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Customer
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CustomerPatchV2")]
    public partial class CustomerPatchV2Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PatchV2.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Customer", "CustomerPatchV2", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfRegistration")]
        [NUnit.Framework.CategoryAttribute("customers")]
        [NUnit.Framework.CategoryAttribute("smoke")]
        public virtual void PatchDateOfRegistration()
        {
            string[] tagsOfScenario = new string[] {
                    "customers",
                    "smoke"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfRegistration", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table412 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table412.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table412.AddRow(new string[] {
                            "Title",
                            "1"});
                table412.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table412.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table412.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table412.AddRow(new string[] {
                            "Gender",
                            "1"});
                table412.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table412.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table412.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table412.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table412.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table412.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 5
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table412, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table413 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table413.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-28T16:11:00Z"});
#line 19
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table413, "When ");
#line hidden
#line 22
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table414 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table414.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-28T16:11:00Z"});
                table414.AddRow(new string[] {
                            "Title",
                            "1"});
                table414.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table414.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table414.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table414.AddRow(new string[] {
                            "Gender",
                            "1"});
                table414.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table414.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table414.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table414.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table414.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 24
 testRunner.And("the response body should contain:", ((string)(null)), table414, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Title")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchTitle()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Title", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table415 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table415.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table415.AddRow(new string[] {
                            "Title",
                            "1"});
                table415.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table415.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table415.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table415.AddRow(new string[] {
                            "Gender",
                            "1"});
                table415.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table415.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table415.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table415.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table415.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table415.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 40
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table415, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table416 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table416.AddRow(new string[] {
                            "Title",
                            "2"});
#line 54
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table416, "When ");
#line hidden
#line 57
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.And("the response body should not contain the \"CreatedBy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table417 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table417.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table417.AddRow(new string[] {
                            "Title",
                            "2"});
                table417.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table417.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table417.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table417.AddRow(new string[] {
                            "Gender",
                            "1"});
                table417.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table417.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table417.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table417.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table417.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 60
 testRunner.And("the response body should contain:", ((string)(null)), table417, "And ");
#line hidden
#line 73
 testRunner.Given("I wait for 10 Seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
 testRunner.Then("there should be a record in the dss-customers table with CustomerId", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch GivenName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGivenName()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch GivenName", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 78
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table418 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table418.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table418.AddRow(new string[] {
                            "Title",
                            "1"});
                table418.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table418.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table418.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table418.AddRow(new string[] {
                            "Gender",
                            "1"});
                table418.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table418.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table418.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table418.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table418.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table418.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 79
 testRunner.Given("I post a Customer with the following details:", ((string)(null)), table418, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table419 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table419.AddRow(new string[] {
                            "GivenName",
                            "Bill"});
#line 93
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table419, "When ");
#line hidden
#line 96
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table420 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table420.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table420.AddRow(new string[] {
                            "Title",
                            "1"});
                table420.AddRow(new string[] {
                            "GivenName",
                            "Bill"});
                table420.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table420.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table420.AddRow(new string[] {
                            "Gender",
                            "1"});
                table420.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table420.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table420.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table420.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table420.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 97
 testRunner.And("the response body should contain:", ((string)(null)), table420, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch FamilyName")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchFamilyName()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch FamilyName", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table421 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table421.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table421.AddRow(new string[] {
                            "Title",
                            "1"});
                table421.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table421.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table421.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table421.AddRow(new string[] {
                            "Gender",
                            "1"});
                table421.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table421.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table421.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table421.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table421.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table421.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 113
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table421, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table422 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table422.AddRow(new string[] {
                            "FamilyName",
                            "Update"});
#line 127
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table422, "When ");
#line hidden
#line 130
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table423 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table423.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table423.AddRow(new string[] {
                            "Title",
                            "1"});
                table423.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table423.AddRow(new string[] {
                            "FamilyName",
                            "Update"});
                table423.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table423.AddRow(new string[] {
                            "Gender",
                            "1"});
                table423.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table423.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table423.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table423.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table423.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 131
 testRunner.And("the response body should contain:", ((string)(null)), table423, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateofBirth")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateofBirth()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateofBirth", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 146
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table424 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table424.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table424.AddRow(new string[] {
                            "Title",
                            "1"});
                table424.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table424.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table424.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table424.AddRow(new string[] {
                            "Gender",
                            "1"});
                table424.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table424.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table424.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table424.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table424.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table424.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 147
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table424, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table425 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table425.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-27T13:45:00Z"});
#line 161
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table425, "When ");
#line hidden
#line 164
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table426 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table426.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table426.AddRow(new string[] {
                            "Title",
                            "1"});
                table426.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table426.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table426.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-27T13:45:00Z"});
                table426.AddRow(new string[] {
                            "Gender",
                            "1"});
                table426.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table426.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table426.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table426.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table426.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 165
 testRunner.And("the response body should contain:", ((string)(null)), table426, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch Gender")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchGender()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch Gender", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 180
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table427 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table427.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table427.AddRow(new string[] {
                            "Title",
                            "1"});
                table427.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table427.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table427.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table427.AddRow(new string[] {
                            "Gender",
                            "1"});
                table427.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table427.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table427.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table427.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table427.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table427.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 181
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table427, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table428 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table428.AddRow(new string[] {
                            "Gender",
                            "2"});
#line 195
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table428, "When ");
#line hidden
#line 198
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table429 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table429.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table429.AddRow(new string[] {
                            "Title",
                            "1"});
                table429.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table429.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table429.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table429.AddRow(new string[] {
                            "Gender",
                            "2"});
                table429.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table429.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table429.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table429.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table429.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 199
 testRunner.And("the response body should contain:", ((string)(null)), table429, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch UniqueLearnerNumber")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchUniqueLearnerNumber()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch UniqueLearnerNumber", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 214
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table430 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table430.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table430.AddRow(new string[] {
                            "Title",
                            "1"});
                table430.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table430.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table430.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table430.AddRow(new string[] {
                            "Gender",
                            "1"});
                table430.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table430.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table430.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table430.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table430.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table430.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 215
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table430, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table431 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table431.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543211"});
#line 229
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table431, "When ");
#line hidden
#line 232
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table432 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table432.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table432.AddRow(new string[] {
                            "Title",
                            "1"});
                table432.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table432.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table432.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table432.AddRow(new string[] {
                            "Gender",
                            "1"});
                table432.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543211"});
                table432.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table432.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table432.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table432.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 233
 testRunner.And("the response body should contain:", ((string)(null)), table432, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInUserResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInUserResearch()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInUserResearch", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 248
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table433 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table433.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table433.AddRow(new string[] {
                            "Title",
                            "1"});
                table433.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table433.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table433.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table433.AddRow(new string[] {
                            "Gender",
                            "1"});
                table433.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table433.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table433.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table433.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table433.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table433.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 249
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table433, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table434 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table434.AddRow(new string[] {
                            "OptInUserResearch",
                            "false"});
#line 263
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table434, "When ");
#line hidden
#line 266
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table435 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table435.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table435.AddRow(new string[] {
                            "Title",
                            "1"});
                table435.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table435.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table435.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table435.AddRow(new string[] {
                            "Gender",
                            "1"});
                table435.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table435.AddRow(new string[] {
                            "OptInUserResearch",
                            "false"});
                table435.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table435.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table435.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 267
 testRunner.And("the response body should contain:", ((string)(null)), table435, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch OptInMarketResearch")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchOptInMarketResearch()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch OptInMarketResearch", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 282
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table436 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table436.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table436.AddRow(new string[] {
                            "Title",
                            "1"});
                table436.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table436.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table436.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table436.AddRow(new string[] {
                            "Gender",
                            "1"});
                table436.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table436.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table436.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table436.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table436.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table436.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 283
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table436, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table437 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table437.AddRow(new string[] {
                            "OptInMarketResearch",
                            "true"});
#line 297
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table437, "When ");
#line hidden
#line 300
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table438 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table438.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table438.AddRow(new string[] {
                            "Title",
                            "1"});
                table438.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table438.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table438.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table438.AddRow(new string[] {
                            "Gender",
                            "1"});
                table438.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table438.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table438.AddRow(new string[] {
                            "OptInMarketResearch",
                            "true"});
                table438.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table438.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 301
 testRunner.And("the response body should contain:", ((string)(null)), table438, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchDateOfTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch DateOfTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 316
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table439 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table439.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table439.AddRow(new string[] {
                            "Title",
                            "1"});
                table439.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table439.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table439.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table439.AddRow(new string[] {
                            "Gender",
                            "1"});
                table439.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table439.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table439.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table439.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table439.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table439.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 317
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table439, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table440 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table440.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-08-27T14:45:00Z"});
#line 331
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table440, "When ");
#line hidden
#line 334
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table441 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table441.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table441.AddRow(new string[] {
                            "Title",
                            "1"});
                table441.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table441.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table441.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table441.AddRow(new string[] {
                            "Gender",
                            "1"});
                table441.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table441.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table441.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table441.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table441.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 335
 testRunner.And("the response body should contain:", ((string)(null)), table441, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch ReasonForTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchReasonForTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch ReasonForTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 350
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table442 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table442.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table442.AddRow(new string[] {
                            "Title",
                            "1"});
                table442.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table442.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table442.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table442.AddRow(new string[] {
                            "Gender",
                            "1"});
                table442.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table442.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table442.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table442.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table442.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table442.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 351
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table442, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table443 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table443.AddRow(new string[] {
                            "ReasonForTermination",
                            "2"});
                table443.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T16:11:00Z"});
#line 365
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table443, "When ");
#line hidden
#line 369
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table444 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table444.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table444.AddRow(new string[] {
                            "Title",
                            "1"});
                table444.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table444.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table444.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table444.AddRow(new string[] {
                            "Gender",
                            "1"});
                table444.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table444.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table444.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table444.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table444.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table444.AddRow(new string[] {
                            "ReasonForTermination",
                            "2"});
                table444.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T16:11:00Z"});
#line 370
 testRunner.And("the response body should contain:", ((string)(null)), table444, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedBy")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedBy()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedBy", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 387
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table445 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table445.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table445.AddRow(new string[] {
                            "Title",
                            "1"});
                table445.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table445.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table445.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table445.AddRow(new string[] {
                            "Gender",
                            "1"});
                table445.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table445.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table445.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table445.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table445.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table445.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 388
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table445, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table446 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table446.AddRow(new string[] {
                            "IntroducedBy",
                            "2"});
#line 402
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table446, "When ");
#line hidden
#line 405
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table447 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table447.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table447.AddRow(new string[] {
                            "Title",
                            "1"});
                table447.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table447.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table447.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table447.AddRow(new string[] {
                            "Gender",
                            "1"});
                table447.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table447.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table447.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table447.AddRow(new string[] {
                            "IntroducedBy",
                            "2"});
                table447.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
#line 406
 testRunner.And("the response body should contain:", ((string)(null)), table447, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch IntroducedByAdditionalInfo")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchIntroducedByAdditionalInfo()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch IntroducedByAdditionalInfo", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 421
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table448 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table448.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table448.AddRow(new string[] {
                            "Title",
                            "1"});
                table448.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table448.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table448.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table448.AddRow(new string[] {
                            "Gender",
                            "1"});
                table448.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table448.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table448.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table448.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table448.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table448.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 422
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table448, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table449 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table449.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 436
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table449, "When ");
#line hidden
#line 439
 testRunner.Then("there should be a 200 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table450 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table450.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table450.AddRow(new string[] {
                            "Title",
                            "1"});
                table450.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table450.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table450.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table450.AddRow(new string[] {
                            "Gender",
                            "1"});
                table450.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table450.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table450.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table450.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table450.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 440
 testRunner.And("the response body should contain:", ((string)(null)), table450, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Patch With Existing DateOfTermination")]
        [NUnit.Framework.CategoryAttribute("customers")]
        public virtual void PatchWithExistingDateOfTermination()
        {
            string[] tagsOfScenario = new string[] {
                    "customers"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Patch With Existing DateOfTermination", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 455
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table451 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table451.AddRow(new string[] {
                            "DateOfRegistration",
                            "2018-07-27T16:11:00Z"});
                table451.AddRow(new string[] {
                            "Title",
                            "1"});
                table451.AddRow(new string[] {
                            "GivenName",
                            "Bob"});
                table451.AddRow(new string[] {
                            "FamilyName",
                            "Customer"});
                table451.AddRow(new string[] {
                            "DateofBirth",
                            "2005-07-26T13:45:00Z"});
                table451.AddRow(new string[] {
                            "Gender",
                            "1"});
                table451.AddRow(new string[] {
                            "UniqueLearnerNumber",
                            "9876543210"});
                table451.AddRow(new string[] {
                            "OptInUserResearch",
                            "true"});
                table451.AddRow(new string[] {
                            "OptInMarketResearch",
                            "false"});
                table451.AddRow(new string[] {
                            "DateOfTermination",
                            "2018-07-27T14:45:00Z"});
                table451.AddRow(new string[] {
                            "ReasonForTermination",
                            "1"});
                table451.AddRow(new string[] {
                            "IntroducedBy",
                            "1"});
                table451.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "additional info"});
                table451.AddRow(new string[] {
                            "LastModifiedDate",
                            "2018-06-21T14:45:00Z"});
#line 456
 testRunner.Given("I post a Customer with the following details V2:", ((string)(null)), table451, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table452 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table452.AddRow(new string[] {
                            "IntroducedByAdditionalInfo",
                            "updated info"});
#line 472
 testRunner.When("I patch the following Customer V2:", ((string)(null)), table452, "When ");
#line hidden
#line 475
 testRunner.Then("there should be a 403 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
