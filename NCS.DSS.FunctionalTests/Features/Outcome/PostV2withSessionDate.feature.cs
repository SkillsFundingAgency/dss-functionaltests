// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace NCS.DSS.FunctionalTests.Features.Outcome
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PostV2withSessionDate")]
    [NUnit.Framework.CategoryAttribute("postV2")]
    public partial class PostV2WithSessionDateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PostV2withSessionDate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PostV2withSessionDate", null, ProgrammingLanguage.CSharp, new string[] {
                        "postV2"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid Outcome")]
        public virtual void ValidOutcome()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid Outcome", null, ((string[])(null)));
#line 8
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table1.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 9
  testRunner.Given("I post an adviser with the following details:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table2.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 13
  testRunner.And("I post a Customer with the following details:", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "DateandTimeOfInteraction",
                        "2018-02-01T11:21:00Z"});
            table3.AddRow(new string[] {
                        "Channel",
                        "2"});
            table3.AddRow(new string[] {
                        "InteractionType",
                        "2"});
#line 17
  testRunner.And("I post an Interaction with the following details:", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table4.AddRow(new string[] {
                        "DateandTimeOfSession",
                        "2018-02-01T11:21:00Z"});
            table4.AddRow(new string[] {
                        "VenuePostCode",
                        "NN1 2NN"});
#line 22
  testRunner.And("I post a session with the following details:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table5.AddRow(new string[] {
                        "DateActionPlanCreated",
                        "2018-02-01T11:21:00Z"});
            table5.AddRow(new string[] {
                        "CustomerCharterShownToCustomer",
                        "true"});
            table5.AddRow(new string[] {
                        "DateAndTimeCharterShown",
                        "2018-02-01T11:21:00Z"});
            table5.AddRow(new string[] {
                        "DateActionPlanSentToCustomer",
                        "2018-02-01T11:21:00Z"});
            table5.AddRow(new string[] {
                        "ActionPlanDeliveryMethod",
                        "1"});
            table5.AddRow(new string[] {
                        "DateActionPlanAcknowledged",
                        "2018-02-10T11:21:00Z"});
            table5.AddRow(new string[] {
                        "PriorityCustomer",
                        "1"});
            table5.AddRow(new string[] {
                        "CurrentSituation",
                        "looking for work"});
#line 26
  testRunner.And("I post an ActionPlan with the following details:", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "OutcomeType",
                        "1"});
            table6.AddRow(new string[] {
                        "OutcomeClaimedDate",
                        "2018-06-06T11:21:00Z"});
            table6.AddRow(new string[] {
                        "OutcomeEffectiveDate",
                        "2018-05-05T11:21:00Z"});
            table6.AddRow(new string[] {
                        "ClaimedPriorityGroup",
                        "3"});
#line 36
  testRunner.Given("I post an outcome with the following details:", ((string)(null)), table6, "Given ");
#line 42
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Outcome effective date earlier than Session.DateandTimeOfSession")]
        [NUnit.Framework.CategoryAttribute("outcomes")]
        public virtual void OutcomeEffectiveDateEarlierThanSession_DateandTimeOfSession()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Outcome effective date earlier than Session.DateandTimeOfSession", null, new string[] {
                        "outcomes"});
#line 47
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table7.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 48
  testRunner.Given("I post an adviser with the following details:", ((string)(null)), table7, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table8.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 52
  testRunner.And("I post a Customer with the following details:", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "DateandTimeOfInteraction",
                        "2018-02-01T11:21:00Z"});
            table9.AddRow(new string[] {
                        "Channel",
                        "2"});
            table9.AddRow(new string[] {
                        "InteractionType",
                        "2"});
#line 56
  testRunner.And("I post an Interaction with the following details:", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "DateandTimeOfSession",
                        "2018-02-01T11:21:00Z"});
            table10.AddRow(new string[] {
                        "VenuePostCode",
                        "NN1 2NN"});
#line 61
  testRunner.And("I post a session with the following details:", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table11.AddRow(new string[] {
                        "DateActionPlanCreated",
                        "2018-02-01T11:21:00Z"});
            table11.AddRow(new string[] {
                        "CustomerCharterShownToCustomer",
                        "true"});
            table11.AddRow(new string[] {
                        "DateAndTimeCharterShown",
                        "2018-02-01T11:21:00Z"});
            table11.AddRow(new string[] {
                        "DateActionPlanSentToCustomer",
                        "2018-02-01T11:21:00Z"});
            table11.AddRow(new string[] {
                        "ActionPlanDeliveryMethod",
                        "1"});
            table11.AddRow(new string[] {
                        "DateActionPlanAcknowledged",
                        "2018-02-10T11:21:00Z"});
            table11.AddRow(new string[] {
                        "PriorityCustomer",
                        "1"});
            table11.AddRow(new string[] {
                        "CurrentSituation",
                        "looking for work"});
#line 65
  testRunner.And("I post an ActionPlan with the following details:", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "OutcomeType",
                        "1"});
            table12.AddRow(new string[] {
                        "OutcomeClaimedDate",
                        "2018-01-01T11:21:00Z"});
            table12.AddRow(new string[] {
                        "OutcomeEffectiveDate",
                        "2018-01-01T11:21:00Z"});
            table12.AddRow(new string[] {
                        "ClaimedPriorityGroup",
                        "3"});
#line 75
  testRunner.Given("I post an outcome with the following details:", ((string)(null)), table12, "Given ");
#line 81
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Outcome effective date less than Outcome claimed date")]
        [NUnit.Framework.CategoryAttribute("outcomes")]
        public virtual void OutcomeEffectiveDateLessThanOutcomeClaimedDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Outcome effective date less than Outcome claimed date", null, new string[] {
                        "outcomes"});
#line 84
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table13.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 85
  testRunner.Given("I post an adviser with the following details:", ((string)(null)), table13, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table14.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 89
  testRunner.And("I post a Customer with the following details:", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "DateandTimeOfInteraction",
                        "2018-02-01T11:21:00Z"});
            table15.AddRow(new string[] {
                        "Channel",
                        "2"});
            table15.AddRow(new string[] {
                        "InteractionType",
                        "2"});
#line 93
  testRunner.And("I post an Interaction with the following details:", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "DateandTimeOfSession",
                        "2018-02-01T11:21:00Z"});
            table16.AddRow(new string[] {
                        "VenuePostCode",
                        "NN1 2NN"});
#line 98
  testRunner.And("I post a session with the following details:", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table17.AddRow(new string[] {
                        "DateActionPlanCreated",
                        "2018-02-01T11:21:00Z"});
            table17.AddRow(new string[] {
                        "CustomerCharterShownToCustomer",
                        "true"});
            table17.AddRow(new string[] {
                        "DateAndTimeCharterShown",
                        "2018-02-01T11:21:00Z"});
            table17.AddRow(new string[] {
                        "DateActionPlanSentToCustomer",
                        "2018-02-01T11:21:00Z"});
            table17.AddRow(new string[] {
                        "ActionPlanDeliveryMethod",
                        "1"});
            table17.AddRow(new string[] {
                        "DateActionPlanAcknowledged",
                        "2018-02-10T11:21:00Z"});
            table17.AddRow(new string[] {
                        "PriorityCustomer",
                        "1"});
            table17.AddRow(new string[] {
                        "CurrentSituation",
                        "looking for work"});
#line 102
  testRunner.And("I post an ActionPlan with the following details:", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "OutcomeType",
                        "1"});
            table18.AddRow(new string[] {
                        "OutcomeClaimedDate",
                        "2018-02-02T11:21:00Z"});
            table18.AddRow(new string[] {
                        "OutcomeEffectiveDate",
                        "2018-02-03T11:21:00Z"});
            table18.AddRow(new string[] {
                        "ClaimedPriorityGroup",
                        "3"});
#line 112
  testRunner.Given("I post an outcome with the following details:", ((string)(null)), table18, "Given ");
#line 118
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Outcome effective date greater than Session.DateandTimeOfSession + 12 months")]
        [NUnit.Framework.CategoryAttribute("outcomes")]
        public virtual void OutcomeEffectiveDateGreaterThanSession_DateandTimeOfSession12Months()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Outcome effective date greater than Session.DateandTimeOfSession + 12 months", null, new string[] {
                        "outcomes"});
#line 121
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table19.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 122
  testRunner.Given("I post an adviser with the following details:", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table20.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 126
  testRunner.And("I post a Customer with the following details:", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "DateandTimeOfInteraction",
                        "2018-02-01T11:21:00Z"});
            table21.AddRow(new string[] {
                        "Channel",
                        "2"});
            table21.AddRow(new string[] {
                        "InteractionType",
                        "2"});
#line 130
  testRunner.And("I post an Interaction with the following details:", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "DateandTimeOfSession",
                        "2018-02-01T11:21:00Z"});
            table22.AddRow(new string[] {
                        "VenuePostCode",
                        "NN1 2NN"});
#line 135
  testRunner.And("I post a session with the following details:", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table23.AddRow(new string[] {
                        "DateActionPlanCreated",
                        "2018-02-01T11:21:00Z"});
            table23.AddRow(new string[] {
                        "CustomerCharterShownToCustomer",
                        "true"});
            table23.AddRow(new string[] {
                        "DateAndTimeCharterShown",
                        "2018-02-01T11:21:00Z"});
            table23.AddRow(new string[] {
                        "DateActionPlanSentToCustomer",
                        "2018-02-01T11:21:00Z"});
            table23.AddRow(new string[] {
                        "ActionPlanDeliveryMethod",
                        "1"});
            table23.AddRow(new string[] {
                        "DateActionPlanAcknowledged",
                        "2018-02-10T11:21:00Z"});
            table23.AddRow(new string[] {
                        "PriorityCustomer",
                        "1"});
            table23.AddRow(new string[] {
                        "CurrentSituation",
                        "looking for work"});
#line 139
  testRunner.And("I post an ActionPlan with the following details:", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "OutcomeType",
                        "1"});
            table24.AddRow(new string[] {
                        "OutcomeEffectiveDate",
                        "2019-02-05T11:21:00Z"});
            table24.AddRow(new string[] {
                        "ClaimedPriorityGroup",
                        "3"});
#line 149
  testRunner.Given("I post an outcome with the following details:", ((string)(null)), table24, "Given ");
#line 154
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Outcome effective date greater than Session.DateandTimeOfSession + 12 months with" +
            " outcome type 3")]
        [NUnit.Framework.CategoryAttribute("outcomes")]
        public virtual void OutcomeEffectiveDateGreaterThanSession_DateandTimeOfSession12MonthsWithOutcomeType3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Outcome effective date greater than Session.DateandTimeOfSession + 12 months with" +
                    " outcome type 3", null, new string[] {
                        "outcomes"});
#line 157
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table25.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 158
  testRunner.Given("I post an adviser with the following details:", ((string)(null)), table25, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table26.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table26.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 162
  testRunner.And("I post a Customer with the following details:", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "DateandTimeOfInteraction",
                        "2018-02-01T11:21:00Z"});
            table27.AddRow(new string[] {
                        "Channel",
                        "2"});
            table27.AddRow(new string[] {
                        "InteractionType",
                        "2"});
#line 166
  testRunner.And("I post an Interaction with the following details:", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "DateandTimeOfSession",
                        "2018-02-01T11:21:00Z"});
            table28.AddRow(new string[] {
                        "VenuePostCode",
                        "NN1 2NN"});
#line 171
  testRunner.And("I post a session with the following details:", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table29.AddRow(new string[] {
                        "DateActionPlanCreated",
                        "2018-02-01T11:21:00Z"});
            table29.AddRow(new string[] {
                        "CustomerCharterShownToCustomer",
                        "true"});
            table29.AddRow(new string[] {
                        "DateAndTimeCharterShown",
                        "2018-02-01T11:21:00Z"});
            table29.AddRow(new string[] {
                        "DateActionPlanSentToCustomer",
                        "2018-02-01T11:21:00Z"});
            table29.AddRow(new string[] {
                        "ActionPlanDeliveryMethod",
                        "1"});
            table29.AddRow(new string[] {
                        "DateActionPlanAcknowledged",
                        "2018-02-10T11:21:00Z"});
            table29.AddRow(new string[] {
                        "PriorityCustomer",
                        "1"});
            table29.AddRow(new string[] {
                        "CurrentSituation",
                        "looking for work"});
#line 175
  testRunner.And("I post an ActionPlan with the following details:", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "OutcomeType",
                        "3"});
            table30.AddRow(new string[] {
                        "OutcomeEffectiveDate",
                        "2019-02-05T11:21:00Z"});
            table30.AddRow(new string[] {
                        "ClaimedPriorityGroup",
                        "3"});
#line 185
  testRunner.Given("I post an outcome with the following details:", ((string)(null)), table30, "Given ");
#line 190
  testRunner.Then("there should be a 201 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Claimed priority group missing")]
        [NUnit.Framework.CategoryAttribute("outcomes")]
        public virtual void ClaimedPriorityGroupMissing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claimed priority group missing", null, new string[] {
                        "outcomes"});
#line 193
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "AdviserName",
                        "BillyAdviser"});
            table31.AddRow(new string[] {
                        "AdviserContactNumber",
                        "98798678967967"});
#line 194
  testRunner.Given("I post an adviser with the following details:", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table32.AddRow(new string[] {
                        "GivenName",
                        "Bob"});
            table32.AddRow(new string[] {
                        "FamilyName",
                        "Customer"});
#line 198
  testRunner.And("I post a Customer with the following details:", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table33.AddRow(new string[] {
                        "DateandTimeOfInteraction",
                        "2018-02-01T11:21:00Z"});
            table33.AddRow(new string[] {
                        "Channel",
                        "2"});
            table33.AddRow(new string[] {
                        "InteractionType",
                        "2"});
#line 202
  testRunner.And("I post an Interaction with the following details:", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "DateandTimeOfSession",
                        "2018-02-01T11:21:00Z"});
            table34.AddRow(new string[] {
                        "VenuePostCode",
                        "NN1 2NN"});
#line 207
  testRunner.And("I post a session with the following details:", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "field",
                        "value"});
            table35.AddRow(new string[] {
                        "DateActionPlanCreated",
                        "2018-02-01T11:21:00Z"});
            table35.AddRow(new string[] {
                        "CustomerCharterShownToCustomer",
                        "true"});
            table35.AddRow(new string[] {
                        "DateAndTimeCharterShown",
                        "2018-02-01T11:21:00Z"});
            table35.AddRow(new string[] {
                        "DateActionPlanSentToCustomer",
                        "2018-02-01T11:21:00Z"});
            table35.AddRow(new string[] {
                        "ActionPlanDeliveryMethod",
                        "1"});
            table35.AddRow(new string[] {
                        "DateActionPlanAcknowledged",
                        "2018-02-10T11:21:00Z"});
            table35.AddRow(new string[] {
                        "PriorityCustomer",
                        "1"});
            table35.AddRow(new string[] {
                        "CurrentSituation",
                        "looking for work"});
#line 211
  testRunner.And("I post an ActionPlan with the following details:", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "OutcomeType",
                        "1"});
            table36.AddRow(new string[] {
                        "OutcomeClaimedDate",
                        "2018-06-06T11:21:00Z"});
            table36.AddRow(new string[] {
                        "OutcomeEffectiveDate",
                        "2018-05-05T11:21:00Z"});
#line 221
  testRunner.Given("I post an outcome with the following details:", ((string)(null)), table36, "Given ");
#line 226
  testRunner.Then("there should be a 422 response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

